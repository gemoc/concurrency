ClockConstraintSystem Model {
	imports {
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as kernel ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as CCSL ;
		import "platform:/resource/fr.inria.aoste.timmo2use.tadl2.examples/BrakeByWireOneWheel/model.uml" as Model ;
		import "platform:/resource/fr.inria.aoste.timmo2use.tadl2.examples/BrakeByWireOneWheel/model.uml" as Model ;
	}
	entryBlock mainBlock
	Block mainBlock {
		Relation brakeTorqueCalculatorAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> brakeTorqueCalculator_start,
		AlternatesRightClock -> brakeTorqueCalculator_stop )
		Relation frontLeftWheelSpeedSensorAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> frontLeftWheelSpeedSensor_start,
		AlternatesRightClock -> frontLeftWheelSpeedSensor_stop )
		Relation brakePedalSensorAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> brakePedalSensor_start,
		AlternatesRightClock -> brakePedalSensor_stop )
		Relation frontLeftABSSatAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> frontLeftABSSat_start,
		AlternatesRightClock -> frontLeftABSSat_stop )
		Relation frontLeftBrakeAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> frontLeftBrake_start,
		AlternatesRightClock -> frontLeftBrake_stop )
		Relation globalBrakeControllerAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> globalBrakeController_start,
		AlternatesRightClock -> globalBrakeController_stop )
		Relation globalBrakeControllerintermediate_PortOutWriteCoincidesWithStop1_2 [ Coincides ]
		( Clock1 -> torqFrontLeftWheel_write,
		Clock2 -> VehicleSpeed_write )
		Relation brakeTorqueCalculatorCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> requestedTorq_write,
		Clock1 -> brakeTorqueCalculator_stop )
		Relation frontLeftWheelSpeedSensorCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> FLspeed_rpm_write,
		Clock1 -> frontLeftWheelSpeedSensor_stop )
		Relation brakePedalSensorCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> pedalPosition_write,
		Clock1 -> brakePedalSensor_stop )
		Relation frontLeftABSSatCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> FLABSBrakeTorq_write,
		Clock1 -> frontLeftABSSat_stop )
		Relation frontLeftBrakeCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> FLActuatorSignal_write,
		Clock1 -> frontLeftBrake_stop )
		Relation globalBrakeControllerCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> torqFrontLeftWheel_write,
		Clock1 -> globalBrakeController_stop )
		Relation frontLeftABSSatintermediate_PortInReadCoincidesWithStart1_2 [ Coincides ]
		( Clock1 -> FLRequestedTorq_read,
		Clock2 -> FLvehicleSpeed_kmph_read )
		Relation frontLeftABSSatintermediate_PortInReadCoincidesWithStart1_3 [ Coincides ]
		( Clock1 -> FLRequestedTorq_read,
		Clock2 -> FLwheelSpeed_rpm_read )
		Relation frontLeftABSSatintermediate_PortInReadCoincidesWithStart2_3 [ Coincides ]
		( Clock1 -> FLvehicleSpeed_kmph_read,
		Clock2 -> FLwheelSpeed_rpm_read )
		Relation globalBrakeControllerintermediate_PortInReadCoincidesWithStart1_2 [ Coincides ]
		( Clock1 -> frontLeftWheel_rpm_read,
		Clock2 -> globalTorque_read )
		Relation brakeTorqueCalculatorCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> pedalPosition_read,
		Clock1 -> brakeTorqueCalculator_start )
		Relation brakePedalSensorCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> BrakePedalActionning_read,
		Clock1 -> brakePedalSensor_start )
		Relation frontLeftABSSatCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> FLRequestedTorq_read,
		Clock1 -> frontLeftABSSat_start )
		Relation frontLeftBrakeCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> FLtorqCmd_read,
		Clock1 -> frontLeftBrake_start )
		Relation globalBrakeControllerCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> frontLeftWheel_rpm_read,
		Clock1 -> globalBrakeController_start )
		Clock FLspeed_rpm_write : clock -> evt_FLspeed_rpm_write
		( "Model->Model::WheelSpeedSensorFL::FLspeed_rpm" )
		: produce
		Clock VehicleSpeed_write : clock -> evt_VehicleSpeed_write
		( "Model->Model::GlobalBrakeController::VehicleSpeed" )
		: produce
		Clock torqFrontLeftWheel_write : clock -> evt_torqFrontLeftWheel_write
		( "Model->Model::GlobalBrakeController::torqFrontLeftWheel" )
		: produce
		Clock requestedTorq_write : clock -> evt_requestedTorq_write
		( "Model->Model::BrakeTorqueCalculator::requestedTorq" )
		: produce
		Clock FLActuatorSignal_write : clock -> evt_FLActuatorSignal_write
		( "Model->Model::BrakeFL::FLActuatorSignal" )
		: produce
		Clock FLABSBrakeTorq_write : clock -> evt_FLABSBrakeTorq_write
		( "Model->Model::ABSSatFL::FLABSBrakeTorq" )
		: produce
		Clock pedalPosition_write : clock -> evt_pedalPosition_write
		( "Model->Model::BrakePedalSensor::pedalPosition" )
		: produce
		Clock FLRequestedTorq_read : clock -> evt_FLRequestedTorq_read
		( "Model->Model::ABSSatFL::FLRequestedTorq" )
		: consume
		Clock FLtorqCmd_read : clock -> evt_FLtorqCmd_read
		( "Model->Model::BrakeFL::FLtorqCmd" )
		: consume
		Clock BrakePedalActionning_read : clock -> evt_BrakePedalActionning_read
		( "Model->Model::BrakePedalSensor::BrakePedalActionning" )
		: consume
		Clock FLvehicleSpeed_kmph_read : clock -> evt_FLvehicleSpeed_kmph_read
		( "Model->Model::ABSSatFL::FLvehicleSpeed_kmph" )
		: consume
		Clock globalTorque_read : clock -> evt_globalTorque_read
		( "Model->Model::GlobalBrakeController::globalTorque" )
		: consume
		Clock frontLeftWheel_rpm_read : clock -> evt_frontLeftWheel_rpm_read
		( "Model->Model::GlobalBrakeController::frontLeftWheel_rpm" )
		: consume
		Clock pedalPosition_read : clock -> evt_pedalPosition_read
		( "Model->Model::BrakeTorqueCalculator::pedalPosition" )
		: consume
		Clock FLwheelSpeed_rpm_read : clock -> evt_FLwheelSpeed_rpm_read
		( "Model->Model::ABSSatFL::FLwheelSpeed_rpm" )
		: consume
		Clock brakeTorqueCalculator_start : clock -> evt_brakeTorqueCalculator_start
		( "Model->Model::FunctionalArchitecture::brakeTorqueCalculator" )
		: start
		Clock frontLeftWheelSpeedSensor_start : clock -> evt_frontLeftWheelSpeedSensor_start
		( "Model->Model::FunctionalArchitecture::frontLeftWheelSpeedSensor" )
		: start
		Clock brakePedalSensor_start : clock -> evt_brakePedalSensor_start
		( "Model->Model::FunctionalArchitecture::brakePedalSensor" )
		: start
		Clock frontLeftABSSat_start : clock -> evt_frontLeftABSSat_start
		( "Model->Model::FunctionalArchitecture::frontLeftABSSat" )
		: start
		Clock frontLeftBrake_start : clock -> evt_frontLeftBrake_start
		( "Model->Model::FunctionalArchitecture::frontLeftBrake" )
		: start
		Clock globalBrakeController_start : clock -> evt_globalBrakeController_start
		( "Model->Model::FunctionalArchitecture::globalBrakeController" )
		: start
		Clock brakeTorqueCalculator_stop : clock -> evt_brakeTorqueCalculator_stop
		( "Model->Model::FunctionalArchitecture::brakeTorqueCalculator" )
		: finish
		Clock frontLeftWheelSpeedSensor_stop : clock -> evt_frontLeftWheelSpeedSensor_stop
		( "Model->Model::FunctionalArchitecture::frontLeftWheelSpeedSensor" )
		: finish
		Clock brakePedalSensor_stop : clock -> evt_brakePedalSensor_stop
		( "Model->Model::FunctionalArchitecture::brakePedalSensor" )
		: finish
		Clock frontLeftABSSat_stop : clock -> evt_frontLeftABSSat_stop
		( "Model->Model::FunctionalArchitecture::frontLeftABSSat" )
		: finish
		Clock frontLeftBrake_stop : clock -> evt_frontLeftBrake_stop
		( "Model->Model::FunctionalArchitecture::frontLeftBrake" )
		: finish
		Clock globalBrakeController_stop : clock -> evt_globalBrakeController_stop
		( "Model->Model::FunctionalArchitecture::globalBrakeController" )
		: finish
	}
}