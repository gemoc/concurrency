/*
 * CCSL specification
 * @author:  jdeanton
 * date :  Mon February 25 2013  09:58:13 CET 
 */
ClockConstraintSystem MySpec {
    imports {
        // import statements
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as lib0; 
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as lib1; 
		import "platform:/resource/fr.inria.aoste.timmo2use.tadl2.examples/TADL2_Semantics/tadl2.ccslLib" as tadl2 ;
		import "platform:/resource/fr.inria.aoste.timmo2use.tadl2.examples/november2013/model.uml" as Model;

    }
    entryBlock main
     
        Block main {
        	
        Relation relation_0[Coincides](Clock2-> FLActuatorSignal_write ,	Clock1->BrakeActuatorSigFL_tadlEvent)
//		Relation relation_1[Coincides](Clock2-> FRActuatorSignal_write ,	Clock1->BrakeActuatorSigFR_tadlEvent)
//		Relation relation_2[Coincides](Clock2-> RLActuatorSignal_write ,	Clock1->BrakeActuatorSigRL_tadlEvent)
//		Relation relation_3[Coincides](Clock2-> RRActuatorSignal_write ,	Clock1->BrakeActuatorSigRR_tadlEvent)
//        	
        Relation relation_4[Coincides](   Clock2-> FLspeed_rpm_write ,	Clock1-> FLspeed_rpm_tadlEvent  )
//        Relation relation_5[Coincides](   Clock2-> FRspeed_rpm_write ,	Clock1-> FRspeed_rpm_tadlEvent  )
//        Relation relation_6[Coincides](   Clock2-> RLspeed_rpm_write ,	Clock1-> RLspeed_rpm_tadlEvent  )
//        Relation relation_7[Coincides](   Clock2-> RRspeed_rpm_write ,	Clock1-> RRspeed_rpm_tadlEvent  )

        Relation relation_8[Coincides](   Clock2-> FLABSBrakeTorq_write ,	Clock1-> ABSBrakeTorqFL_tadlEvent  )
//        Relation relation_9[Coincides](   Clock2-> FRABSBrakeTorq_write ,	Clock1-> ABSBrakeTorqFR_tadlEvent  )
//        Relation relation_10[Coincides](   Clock2-> RLABSBrakeTorq_write ,	Clock1-> ABSBrakeTorqRL_tadlEvent  )
//        Relation relation_11[Coincides](   Clock2-> RRABSBrakeTorq_write ,	Clock1-> ABSBrakeTorqRR_tadlEvent  )
//        
        Relation relation_12[Coincides](   Clock2-> pedalPosition_write ,	Clock1-> brakePedalPosition_tadlEvent  )
        
        Relation relation_13[Coincides](   Clock2-> requestedTorq_write ,	Clock1-> requestedTorque_tadlEvent  )

		Relation relation_14[Coincides](   Clock2-> VehicleSpeed_write ,	Clock1-> vehicleSpeed_tadlEvent  )
		
		Relation relation_15[Coincides](   Clock2-> frontLeftWheelSpeedSensor_start ,	Clock1-> doSampleFrontLeftWheelSpeed_tadlEvent )
//		Relation relation_16[Coincides](   Clock2-> frontRightWheelSpeedSensor_start ,	Clock1-> doSampleFrontRightWheelSpeed_tadlEvent )
//		Relation relation_17[Coincides](   Clock2-> rearLeftWheelSpeedSensor_start ,	Clock1-> doSampleRearLeftWheelSpeed_tadlEvent )
//		Relation relation_18[Coincides](   Clock2-> rearRightWheelSpeedSensor_start ,	Clock1-> doSampleRearRightWheelSpeed_tadlEvent )

		Relation relation_19[Coincides](   Clock2-> brakePedalSensor_start ,	Clock1-> doPedalBrakeSensing_tadlEvent  )
		
		Relation relation_20[Coincides](   Clock2-> brakeTorqueCalculator_start ,	Clock1-> doBrakeTorqueCalculatorTriggering_tadlEvent  )
		
		Relation relation_21[Coincides](   Clock2-> globalBrakeController_start ,	Clock1-> doGlobalBrakeControl_tadlEvent  )
		
		Relation relation_22[Coincides](   Clock2-> frontLeftABSSat_start ,	Clock1-> doABSSatTriggeringFL_tadlEvent  )
//		Relation relation_23[Coincides](   Clock2-> frontRightABSSat_start ,Clock1-> doABSSatTriggeringFR_tadlEvent  )
//		Relation relation_24[Coincides](   Clock2-> rearLeftABSSat_start ,	Clock1-> doABSSatTriggeringRL_tadlEvent  )
//		Relation relation_25[Coincides](   Clock2-> rearRightABSSat_start ,	Clock1-> doABSSatTriggeringRR_tadlEvent  )

		Relation relation_26[Coincides](   Clock2-> frontLeftBrake_start ,	Clock1-> doBrakeTriggeringFL_tadlEvent  )
//		Relation relation_27[Coincides](   Clock2-> frontRightBrake_start ,	Clock1-> doBrakeTriggeringFR_tadlEvent  )
//		Relation relation_28[Coincides](   Clock2-> rearLeftBrake_start ,	Clock1-> doBrakeTriggeringRL_tadlEvent  )
//		Relation relation_29[Coincides](   Clock2-> rearRightBrake_start ,	Clock1-> doBrakeTriggeringRR_tadlEvent  )

		Relation relation_30[Coincides](   Clock2-> BrakePedalActionning_read ,	Clock1-> brakePedalActionning_tadlEvent   )
		Relation relation_32[Coincides](   Clock2-> pedalPosition_read ,	Clock1-> calculatorPedalPosition_tadlEvent  )
		Relation relation_37[Coincides](   Clock2-> requestedTorq_write ,	Clock1-> calculatoRequestedTorque_tadlEvent  )

		Relation relation_33[Coincides](   Clock2-> globalTorque_read ,	Clock1-> globalTorque_tadlEvent  )
		Relation relation_34[Coincides](   Clock2-> torqFrontLeftWheel_write ,	Clock1-> torqFrontLeftWheel_tadlEvent  )
		Relation relation_35[Coincides](   Clock2-> FLRequestedTorq_read ,	Clock1-> FLrequestedTorq_tadlEvent  )
		Relation relation_36[Coincides](   Clock2-> FLtorqCmd_read ,	Clock1-> FLtorqCmd_tadlEvent  )




        
        
        
        
        
        

        	
        	
        	
        	
        	
        	
        	
        	
        	
      
		Expression reactionConstraintToStartBraking_DelayFor_deadline = DelayFor
		( DelayForClockToDelay -> StartBraking_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> reactionConstraintToStartBrakingendToEnd_max_value )
		Expression reactionConstraintToStartBraking_DelayFor_minTime = DelayFor
		( DelayForClockToDelay -> StartBraking_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> reactionConstraintToStartBrakingendToEnd_min_value )
		
		Expression ChainPedalPositionWrite = SampledOn
		( SampledOnSampledClock -> StartBraking_tadlEvent,
		SampledOnTrigger -> brakePedalPosition_tadlEvent )
		Expression ChainPedalPositionRead = SampledOn
		( SampledOnSampledClock -> ChainPedalPositionWrite,
		SampledOnTrigger -> calculatorPedalPosition_tadlEvent )
		Expression ChainrequestedTorqWrite = SampledOn
		( SampledOnSampledClock -> ChainPedalPositionRead,
		SampledOnTrigger -> calculatoRequestedTorque_tadlEvent )
		Expression ChainrequestedTorqRead = SampledOn
		( SampledOnSampledClock -> ChainrequestedTorqWrite,
		SampledOnTrigger -> globalTorque_tadlEvent )
		Expression ChainTorqFLWrite = SampledOn
		( SampledOnSampledClock -> ChainrequestedTorqRead,
		SampledOnTrigger -> torqFrontLeftWheel_tadlEvent )
		Expression ChainTorqFLRead = SampledOn
		( SampledOnSampledClock -> ChainTorqFLWrite,
		SampledOnTrigger -> FLrequestedTorq_tadlEvent )
		Expression ChainFLABSRead = SampledOn
		( SampledOnSampledClock -> ChainTorqFLRead,
		SampledOnTrigger -> ABSBrakeTorqFL_tadlEvent )
		Expression ChainFLABSWrite = SampledOn
		( SampledOnSampledClock -> ChainFLABSRead,
		SampledOnTrigger -> FLtorqCmd_tadlEvent )
		Expression ChainActuatorSig = SampledOn
		( SampledOnSampledClock -> ChainFLABSWrite,
		SampledOnTrigger -> BrakeActuatorSigFL_tadlEvent )
		Expression universal_time_Periodic_periodicClockTB = Periodic
		( PeriodicBaseClock -> physicalTime_discretized,
		PeriodicPeriod -> universal_timemicros_factor,
		PeriodicOffset -> universal_timeuniversal_time_0 )
		Expression StartBrakingSporadicConstraint_Periodic_sporadicMin = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> StartBrakingSporadicConstraintSporadicBrakingDmin_value,
		PeriodicOffset -> StartBrakingSporadicConstraintStartBrakingSporadicConstraint_0 )
		Expression GlobalBrakeTriggering_Periodic_periodicClock = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> GlobalBrakeTriggeringglobalBrakePeriod_value,
		PeriodicOffset -> GlobalBrakeTriggeringGlobalBrakeTriggering_0 )
		Expression ABSSatTriggeringFL_Periodic_periodicClock = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> ABSSatTriggeringFLABSSatPeriod_value,
		PeriodicOffset -> ABSSatTriggeringFLABSSatTriggeringFL_0 )
		Expression PeriodBrakeCalculator_Periodic_periodicClock = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> PeriodBrakeCalculatorBrakeTorqueCalculatorPeriod_value,
		PeriodicOffset -> PeriodBrakeCalculatorPeriodBrakeCalculator_0 )
		Expression PeriodSensingPD_Periodic_periodicClock = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> PeriodSensingPDSensingPeriod_value,
		PeriodicOffset -> PeriodSensingPDPeriodSensingPD_0 )
		Expression PeriodBrakeTriggeringFL_Periodic_periodicClock = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> PeriodBrakeTriggeringFLBrakePeriod_value,
		PeriodicOffset -> PeriodBrakeTriggeringFLPeriodBrakeTriggeringFL_0 )
		Expression PeriodSensingFL_Periodic_periodicClock = Periodic
		( PeriodicBaseClock -> universal_time_ref,
		PeriodicPeriod -> PeriodSensingFLSensingPeriod_value,
		PeriodicOffset -> PeriodSensingFLPeriodSensingFL_0 )
		Expression FLWheelSensingExecTime_DelayFor_delayedClock = DelayFor
		( DelayForClockToDelay -> doSampleFrontLeftWheelSpeed_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> FLWheelSensingExecTimeWheelSensingExecTime_value )
		Expression BrakeExecTimeFL_DelayFor_delayedClock = DelayFor
		( DelayForClockToDelay -> doBrakeTriggeringFL_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> BrakeExecTimeFLBrakeExecTime_value )
		Expression GlobalBrakeControlExecTime_DelayFor_delayedClock = DelayFor
		( DelayForClockToDelay -> doGlobalBrakeControl_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> GlobalBrakeControlExecTimeGlobalBrakeControlExecTime_value )
		Expression BrakeTorqueCalculatorExecTime_DelayFor_delayedClock = DelayFor
		( DelayForClockToDelay -> doBrakeTorqueCalculatorTriggering_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> BrakeTorqueCalculatorExecTimeBrakeTorqueCalculatorExecTime_value )
		Expression ABSSatExecTimeFL_DelayFor_delayedClock = DelayFor
		( DelayForClockToDelay -> doABSSatTriggeringFL_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> ABSSatExecTimeFLABSSatExecTime_value )
		Expression pedalBrakeExecTime_DelayFor_delayedClock = DelayFor
		( DelayForClockToDelay -> doPedalBrakeSensing_tadlEvent,
		DelayForClockForCounting -> universal_time_ref,
		DelayForDelay -> pedalBrakeExecTimePedalBrakeSensingExecTime_value )
		Relation reactionConstraintToStartBrakingPrecedes_reactionConstraintMax [ Precedes ]
		( LeftClock -> ChainActuatorSig,
		RightClock -> reactionConstraintToStartBraking_DelayFor_deadline )
		Relation reactionConstraintToStartBrakingPrecedes_reactionConstraintMin [ Precedes ]
		( LeftClock -> reactionConstraintToStartBraking_DelayFor_minTime,
		RightClock -> ChainActuatorSig )
		Relation universal_timeCoincides_periodicTB [ Coincides ]
		( Clock2 -> universal_time_ref,
		Clock1 -> universal_time_Periodic_periodicClockTB )
		Relation StartBrakingSporadicConstraintPrecedes_sporadicConstraintRelation [ Precedes ]
		( LeftClock -> StartBrakingSporadicConstraint_Periodic_sporadicMin,
		RightClock -> StartBraking_tadlEvent )
		Relation GlobalBrakeTriggeringCoincides_periodicConstraintRelation [ Coincides ]
		( Clock2 -> GlobalBrakeTriggering_Periodic_periodicClock,
		Clock1 -> doGlobalBrakeControl_tadlEvent )
		Relation ABSSatTriggeringFLCoincides_periodicConstraintRelation [ Coincides ]
		( Clock2 -> ABSSatTriggeringFL_Periodic_periodicClock,
		Clock1 -> doABSSatTriggeringFL_tadlEvent )
		Relation PeriodBrakeCalculatorCoincides_periodicConstraintRelation [ Coincides ]
		( Clock2 -> PeriodBrakeCalculator_Periodic_periodicClock,
		Clock1 -> doBrakeTorqueCalculatorTriggering_tadlEvent )
		Relation PeriodSensingPDCoincides_periodicConstraintRelation [ Coincides ]
		( Clock2 -> PeriodSensingPD_Periodic_periodicClock,
		Clock1 -> doPedalBrakeSensing_tadlEvent )
		Relation PeriodBrakeTriggeringFLCoincides_periodicConstraintRelation [ Coincides ]
		( Clock2 -> PeriodBrakeTriggeringFL_Periodic_periodicClock,
		Clock1 -> doBrakeTriggeringFL_tadlEvent )
		Relation PeriodSensingFLCoincides_periodicConstraintRelation [ Coincides ]
		( Clock2 -> PeriodSensingFL_Periodic_periodicClock,
		Clock1 -> doSampleFrontLeftWheelSpeed_tadlEvent )
		Relation FLWheelSensingExecTimeCoincides_delayConstraintRelation [ Coincides ]
		( Clock2 -> FLWheelSensingExecTime_DelayFor_delayedClock,
		Clock1 -> FLspeed_rpm_tadlEvent )
		Relation BrakeExecTimeFLCoincides_delayConstraintRelation [ Coincides ]
		( Clock2 -> BrakeExecTimeFL_DelayFor_delayedClock,
		Clock1 -> BrakeActuatorSigFL_tadlEvent )
		Relation GlobalBrakeControlExecTimeCoincides_delayConstraintRelation [ Coincides ]
		( Clock2 -> GlobalBrakeControlExecTime_DelayFor_delayedClock,
		Clock1 -> vehicleSpeed_tadlEvent )
		Relation BrakeTorqueCalculatorExecTimeCoincides_delayConstraintRelation [ Coincides ]
		( Clock2 -> BrakeTorqueCalculatorExecTime_DelayFor_delayedClock,
		Clock1 -> requestedTorque_tadlEvent )
		Relation ABSSatExecTimeFLCoincides_delayConstraintRelation [ Coincides ]
		( Clock2 -> ABSSatExecTimeFL_DelayFor_delayedClock,
		Clock1 -> ABSBrakeTorqFL_tadlEvent )
		Relation pedalBrakeExecTimeCoincides_delayConstraintRelation [ Coincides ]
		( Clock2 -> pedalBrakeExecTime_DelayFor_delayedClock,
		Clock1 -> brakePedalPosition_tadlEvent )
		Clock StartBraking_tadlEvent : clock -> evt_StartBraking_tadlEvent
		( )
		Clock globalTorque_tadlEvent : clock -> evt_globalTorque_tadlEvent
		( "Model->Model::GlobalBrakeController::globalTorque" ):consume
		Clock brakePedalPosition_tadlEvent : clock -> evt_brakePedalPosition_tadlEvent
		( "Model->Model::BrakePedalSensor::pedalPosition" ):produce
		Clock BrakeActuatorSigFL_tadlEvent : clock -> evt_BrakeActuatorSigFL_tadlEvent
		( "Model->Model::BrakeFL::FLActuatorSignal" ):produce
		Clock doBrakeTriggeringFL_tadlEvent : clock -> evt_doBrakeTriggeringFL_tadlEvent
		( "Model->Model::FunctionalArchitecture::frontLeftBrake" ):start
		Clock calculatorPedalPosition_tadlEvent : clock -> evt_calculatorPedalPosition_tadlEvent
		( "Model->Model::BrakeTorqueCalculator::pedalPosition" ):consume
		Clock brakePedalActionning_tadlEvent : clock -> evt_brakePedalActionning_tadlEvent
		( "Model->Model::BrakePedalSensor::BrakePedalActionning" ):consume
		Clock doSampleFrontLeftWheelSpeed_tadlEvent : clock -> evt_doSampleFrontLeftWheelSpeed_tadlEvent
		( "Model->Model::FunctionalArchitecture::frontLeftWheelSpeedSensor" ):start
		Clock FLtorqCmd_tadlEvent : clock -> evt_FLtorqCmd_tadlEvent
		( "Model->Model::BrakeFL::FLtorqCmd" ):consume
		Clock requestedTorque_tadlEvent : clock -> evt_requestedTorque_tadlEvent
		( "Model->Model::BrakeTorqueCalculator::requestedTorq" ):produce
		Clock FLspeed_rpm_tadlEvent : clock -> evt_FLspeed_rpm_tadlEvent
		( "Model->Model::WheelSpeedSensorFL::FLspeed_rpm" ):produce
		Clock ABSBrakeTorqFL_tadlEvent : clock -> evt_ABSBrakeTorqFL_tadlEvent
		( "Model->Model::ABSSatFL::FLABSBrakeTorq" ):produce
		Clock doGlobalBrakeControl_tadlEvent : clock -> evt_doGlobalBrakeControl_tadlEvent
		( "Model->Model::FunctionalArchitecture::globalBrakeController" ):start
		Clock torqFrontLeftWheel_tadlEvent : clock -> evt_torqFrontLeftWheel_tadlEvent
		( "Model->Model::GlobalBrakeController::torqFrontLeftWheel" ):produce
		Clock doPedalBrakeSensing_tadlEvent : clock -> evt_doPedalBrakeSensing_tadlEvent
		( "Model->Model::FunctionalArchitecture::brakePedalSensor" ):start
		Clock doABSSatTriggeringFL_tadlEvent : clock -> evt_doABSSatTriggeringFL_tadlEvent
		( "Model->Model::FunctionalArchitecture::frontLeftABSSat" ):start
		Clock vehicleSpeed_tadlEvent : clock -> evt_vehicleSpeed_tadlEvent
		( "Model->Model::GlobalBrakeController::VehicleSpeed" ):produce
		Clock calculatoRequestedTorque_tadlEvent : clock -> evt_calculatoRequestedTorque_tadlEvent
		( "Model->Model::BrakeTorqueCalculator::requestedTorq" ):produce
		Clock FLrequestedTorq_tadlEvent : clock -> evt_FLrequestedTorq_tadlEvent
		( "Model->Model::ABSSatFL::FLRequestedTorq" ):consume
		Clock doBrakeTorqueCalculatorTriggering_tadlEvent : clock -> evt_doBrakeTorqueCalculatorTriggering_tadlEvent
		( "Model->Model::FunctionalArchitecture::brakeTorqueCalculator" ):start
//		Clock universal_time_ref : clock -> evt_universal_time_ref
//		( )
		Clock physicalTime_discretized : clock -> evt_physicalTime_discretized
		( )
		Integer reactionConstraintToStartBrakingendToEnd_max_value : int = 33
		Integer reactionConstraintToStartBrakingendToEnd_min_value : int = 1
		Integer universal_timemicros_factor : int = 1
		Integer universal_timeuniversal_time_0 : int = 0
		Integer PeriodBrakeTriggeringFLBrakePeriod_value : int = 4
		Integer PeriodBrakeTriggeringFLPeriodBrakeTriggeringFL_0 : int = 0
		Integer PeriodSensingPDSensingPeriod_value : int = 2
		Integer PeriodSensingPDPeriodSensingPD_0 : int = 0
		Integer ABSSatTriggeringFLABSSatPeriod_value : int = 4
		Integer ABSSatTriggeringFLABSSatTriggeringFL_0 : int = 0
		Integer PeriodSensingFLSensingPeriod_value : int = 2
		Integer PeriodSensingFLPeriodSensingFL_0 : int = 0
		Integer PeriodBrakeCalculatorBrakeTorqueCalculatorPeriod_value : int = 5
		Integer PeriodBrakeCalculatorPeriodBrakeCalculator_0 : int = 0
		Integer GlobalBrakeTriggeringglobalBrakePeriod_value : int = 9
		Integer GlobalBrakeTriggeringGlobalBrakeTriggering_0 : int = 0
		Integer pedalBrakeExecTimePedalBrakeSensingExecTime_value : int = 1
		Integer FLWheelSensingExecTimeWheelSensingExecTime_value : int = 1
		Integer GlobalBrakeControlExecTimeGlobalBrakeControlExecTime_value : int = 8
		Integer BrakeExecTimeFLBrakeExecTime_value : int = 1
		Integer ABSSatExecTimeFLABSSatExecTime_value : int = 3
		Integer BrakeTorqueCalculatorExecTimeBrakeTorqueCalculatorExecTime_value : int = 4
        Integer StartBrakingSporadicConstraintSporadicBrakingDmin_value : int = 35
		Integer StartBrakingSporadicConstraintStartBrakingSporadicConstraint_0 : int = 0
        	
        	
        	
        	
        	
        	
        	
        	
//        	Expression PeriodBrakeCalculator_Periodic_periodicClock = Periodic
//		( PeriodicBaseClock -> pedalPosition_write,
//		PeriodicPeriod -> PeriodBrakeCalculatorBrakeTorqueCalculatorEventWeight_value,
//		PeriodicOffset -> PeriodBrakeCalculatorPeriodBrakeCalculator_0 )
//        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	
        	Relation brakeTorqueCalculatorAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> brakeTorqueCalculator_start,
		AlternatesRightClock -> brakeTorqueCalculator_stop )
		Relation frontLeftWheelSpeedSensorAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> frontLeftWheelSpeedSensor_start,
		AlternatesRightClock -> frontLeftWheelSpeedSensor_stop )
		Relation brakePedalSensorAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> brakePedalSensor_start,
		AlternatesRightClock -> brakePedalSensor_stop )
		Relation frontLeftABSSatAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> frontLeftABSSat_start,
		AlternatesRightClock -> frontLeftABSSat_stop )
		Relation frontLeftBrakeAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> frontLeftBrake_start,
		AlternatesRightClock -> frontLeftBrake_stop )
		Relation globalBrakeControllerAlternates_StartThenStop [ Alternates ]
		( AlternatesLeftClock -> globalBrakeController_start,
		AlternatesRightClock -> globalBrakeController_stop )
		Relation globalBrakeControllerintermediate_PortOutWriteCoincidesWithStop1_2 [ Coincides ]
		( Clock1 -> torqFrontLeftWheel_write,
		Clock2 -> VehicleSpeed_write )
		Relation brakeTorqueCalculatorCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> requestedTorq_write,
		Clock1 -> brakeTorqueCalculator_stop )
		Relation frontLeftWheelSpeedSensorCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> FLspeed_rpm_write,
		Clock1 -> frontLeftWheelSpeedSensor_stop )
		Relation brakePedalSensorCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> pedalPosition_write,
		Clock1 -> brakePedalSensor_stop )
		Relation frontLeftABSSatCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> FLABSBrakeTorq_write,
		Clock1 -> frontLeftABSSat_stop )
		Relation frontLeftBrakeCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> FLActuatorSignal_write,
		Clock1 -> frontLeftBrake_stop )
		Relation globalBrakeControllerCoincides_PortOutWriteCoincidesWithStop2 [ Coincides ]
		( Clock2 -> torqFrontLeftWheel_write,
		Clock1 -> globalBrakeController_stop )
		Relation frontLeftABSSatintermediate_PortInReadCoincidesWithStart1_2 [ Coincides ]
		( Clock1 -> FLRequestedTorq_read,
		Clock2 -> FLvehicleSpeed_kmph_read )
		Relation frontLeftABSSatintermediate_PortInReadCoincidesWithStart1_3 [ Coincides ]
		( Clock1 -> FLRequestedTorq_read,
		Clock2 -> FLwheelSpeed_rpm_read )
		Relation frontLeftABSSatintermediate_PortInReadCoincidesWithStart2_3 [ Coincides ]
		( Clock1 -> FLvehicleSpeed_kmph_read,
		Clock2 -> FLwheelSpeed_rpm_read )
		Relation globalBrakeControllerintermediate_PortInReadCoincidesWithStart1_2 [ Coincides ]
		( Clock1 -> frontLeftWheel_rpm_read,
		Clock2 -> globalTorque_read )
		Relation brakeTorqueCalculatorCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> pedalPosition_read,
		Clock1 -> brakeTorqueCalculator_start )
		Relation brakePedalSensorCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> BrakePedalActionning_read,
		Clock1 -> brakePedalSensor_start )
		Relation frontLeftABSSatCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> FLRequestedTorq_read,
		Clock1 -> frontLeftABSSat_start )
		Relation frontLeftBrakeCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> FLtorqCmd_read,
		Clock1 -> frontLeftBrake_start )
		Relation globalBrakeControllerCoincides_PortInReadCoincidesWithStart2 [ Coincides ]
		( Clock2 -> frontLeftWheel_rpm_read,
		Clock1 -> globalBrakeController_start )
		Clock FLspeed_rpm_write : clock -> evt_FLspeed_rpm_write
		( "Model->Model::WheelSpeedSensorFL::FLspeed_rpm" )
		: produce
		Clock VehicleSpeed_write : clock -> evt_VehicleSpeed_write
		( "Model->Model::GlobalBrakeController::VehicleSpeed" )
		: produce
		Clock torqFrontLeftWheel_write : clock -> evt_torqFrontLeftWheel_write
		( "Model->Model::GlobalBrakeController::torqFrontLeftWheel" )
		: produce
		Clock requestedTorq_write : clock -> evt_requestedTorq_write
		( "Model->Model::BrakeTorqueCalculator::requestedTorq" )
		: produce
		Clock FLActuatorSignal_write : clock -> evt_FLActuatorSignal_write
		( "Model->Model::BrakeFL::FLActuatorSignal" )
		: produce
		Clock FLABSBrakeTorq_write : clock -> evt_FLABSBrakeTorq_write
		( "Model->Model::ABSSatFL::FLABSBrakeTorq" )
		: produce
		Clock pedalPosition_write : clock -> evt_pedalPosition_write
		( "Model->Model::BrakePedalSensor::pedalPosition" )
		: produce
		Clock FLRequestedTorq_read : clock -> evt_FLRequestedTorq_read
		( "Model->Model::ABSSatFL::FLRequestedTorq" )
		: consume
		Clock FLtorqCmd_read : clock -> evt_FLtorqCmd_read
		( "Model->Model::BrakeFL::FLtorqCmd" )
		: consume
		Clock BrakePedalActionning_read : clock -> evt_BrakePedalActionning_read
		( "Model->Model::BrakePedalSensor::BrakePedalActionning" )
		: consume
		Clock FLvehicleSpeed_kmph_read : clock -> evt_FLvehicleSpeed_kmph_read
		( "Model->Model::ABSSatFL::FLvehicleSpeed_kmph" )
		: consume
		Clock globalTorque_read : clock -> evt_globalTorque_read
		( "Model->Model::GlobalBrakeController::globalTorque" )
		: consume
		Clock frontLeftWheel_rpm_read : clock -> evt_frontLeftWheel_rpm_read
		( "Model->Model::GlobalBrakeController::frontLeftWheel_rpm" )
		: consume
		Clock pedalPosition_read : clock -> evt_pedalPosition_read
		( "Model->Model::BrakeTorqueCalculator::pedalPosition" )
		: consume
		Clock FLwheelSpeed_rpm_read : clock -> evt_FLwheelSpeed_rpm_read
		( "Model->Model::ABSSatFL::FLwheelSpeed_rpm" )
		: consume
		Clock brakeTorqueCalculator_start : clock -> evt_brakeTorqueCalculator_start
		( "Model->Model::FunctionalArchitecture::brakeTorqueCalculator" )
		: start
		Clock frontLeftWheelSpeedSensor_start : clock -> evt_frontLeftWheelSpeedSensor_start
		( "Model->Model::FunctionalArchitecture::frontLeftWheelSpeedSensor" )
		: start
		Clock brakePedalSensor_start : clock -> evt_brakePedalSensor_start
		( "Model->Model::FunctionalArchitecture::brakePedalSensor" )
		: start
		Clock frontLeftABSSat_start : clock -> evt_frontLeftABSSat_start
		( "Model->Model::FunctionalArchitecture::frontLeftABSSat" )
		: start
		Clock frontLeftBrake_start : clock -> evt_frontLeftBrake_start
		( "Model->Model::FunctionalArchitecture::frontLeftBrake" )
		: start
		Clock globalBrakeController_start : clock -> evt_globalBrakeController_start
		( "Model->Model::FunctionalArchitecture::globalBrakeController" )
		: start
		Clock brakeTorqueCalculator_stop : clock -> evt_brakeTorqueCalculator_stop
		( "Model->Model::FunctionalArchitecture::brakeTorqueCalculator" )
		: finish
		Clock frontLeftWheelSpeedSensor_stop : clock -> evt_frontLeftWheelSpeedSensor_stop
		( "Model->Model::FunctionalArchitecture::frontLeftWheelSpeedSensor" )
		: finish
		Clock brakePedalSensor_stop : clock -> evt_brakePedalSensor_stop
		( "Model->Model::FunctionalArchitecture::brakePedalSensor" )
		: finish
		Clock frontLeftABSSat_stop : clock -> evt_frontLeftABSSat_stop
		( "Model->Model::FunctionalArchitecture::frontLeftABSSat" )
		: finish
		Clock frontLeftBrake_stop : clock -> evt_frontLeftBrake_stop
		( "Model->Model::FunctionalArchitecture::frontLeftBrake" )
		: finish
		Clock globalBrakeController_stop : clock -> evt_globalBrakeController_stop
		( "Model->Model::FunctionalArchitecture::globalBrakeController" )
		: finish
	
	
	
	Clock denseTime:physicalTime
	Real discreteFactor = 0.01
	Expression universal_time_ref=Discretize( DenseClock-> denseTime 	,DiscretizationFactor-> discreteFactor  )

	
	}
	dataTypes{
		DenseClockType physicalTime{
			baseUnit second
		}
	}
}
