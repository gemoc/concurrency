/*
* generated by Xtext
*/
grammar InternalTadl2;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package fr.inria.aoste.timmo2use.tadl2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.inria.aoste.timmo2use.tadl2.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.inria.aoste.timmo2use.tadl2.services.Tadl2GrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private Tadl2GrammarAccess grammarAccess;
 	
    public InternalTadl2Parser(TokenStream input, Tadl2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TimingExpressionSpecification";	
   	}
   	
   	@Override
   	protected Tadl2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTimingExpressionSpecification
entryRuleTimingExpressionSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimingExpressionSpecificationRule()); }
	 iv_ruleTimingExpressionSpecification=ruleTimingExpressionSpecification 
	 { $current=$iv_ruleTimingExpressionSpecification.current; } 
	 EOF 
;

// Rule TimingExpressionSpecification
ruleTimingExpressionSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TimingSpecification' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTimingExpressionSpecificationAccess().getTimingSpecificationKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTimingExpressionSpecificationAccess().getLeftCurlyBracketKeyword_2());
    }
((	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTimingExpressionSpecificationAccess().getLeftCurlyBracketKeyword_3_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getTimingExpressionsSymbolicTimingExpressionParserRuleCall_3_0_1_0()); 
	    }
		lv_timingExpressions_4_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"timingExpressions",
        		lv_timingExpressions_4_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTimingExpressionSpecificationAccess().getRightCurlyBracketKeyword_3_0_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getImportStatementsImportStatementParserRuleCall_3_1_0()); 
	    }
		lv_importStatements_6_0=ruleImportStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"importStatements",
        		lv_importStatements_6_0, 
        		"ImportStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getEventsEventParserRuleCall_3_2_0()); 
	    }
		lv_events_7_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"events",
        		lv_events_7_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getEventChainsEventChainParserRuleCall_3_3_0()); 
	    }
		lv_eventChains_8_0=ruleEventChain		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"eventChains",
        		lv_eventChains_8_0, 
        		"EventChain");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getConstraintsTimingConstraintParserRuleCall_3_4_0()); 
	    }
		lv_constraints_9_0=ruleTimingConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"constraints",
        		lv_constraints_9_0, 
        		"TimingConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getTimingExpressionsVariableTimingExpressionParserRuleCall_3_5_0()); 
	    }
		lv_timingExpressions_10_0=ruleVariableTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"timingExpressions",
        		lv_timingExpressions_10_0, 
        		"VariableTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getTimeBasesTimeBaseParserRuleCall_3_6_0()); 
	    }
		lv_timeBases_11_0=ruleTimeBase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"timeBases",
        		lv_timeBases_11_0, 
        		"TimeBase");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getDimensionsDimensionParserRuleCall_3_7_0()); 
	    }
		lv_dimensions_12_0=ruleDimension		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"dimensions",
        		lv_dimensions_12_0, 
        		"Dimension");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimingExpressionSpecificationAccess().getTimeBaseRelationsTimeBaseRelationParserRuleCall_3_8_0()); 
	    }
		lv_timeBaseRelations_13_0=ruleTimeBaseRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimingExpressionSpecificationRule());
	        }
       		add(
       			$current, 
       			"timeBaseRelations",
        		lv_timeBaseRelations_13_0, 
        		"TimeBaseRelation");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTimingExpressionSpecificationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	 iv_ruleImportStatement=ruleImportStatement 
	 { $current=$iv_ruleImportStatement.current; } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportStatementAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportStatementAccess().getAsKeyword_2());
    }
(
(
		lv_alias_3_0=RULE_STRING
		{
			newLeafNode(lv_alias_3_0, grammarAccess.getImportStatementAccess().getAliasSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"alias",
        		lv_alias_3_0, 
        		"STRING");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImportStatementAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleEvent=ruleEvent 
	 { $current=$iv_ruleEvent.current; } 
	 EOF 
;

// Rule Event
ruleEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Event' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEventAccess().getEventKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getTriggerableElementsEObjectCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventAccess().getTriggerableElementsEObjectCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEventAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEventChain
entryRuleEventChain returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventChainRule()); }
	 iv_ruleEventChain=ruleEventChain 
	 { $current=$iv_ruleEventChain.current; } 
	 EOF 
;

// Rule EventChain
ruleEventChain returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EventChain' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEventChainAccess().getEventChainKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventChainAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventChainRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEventChainAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='stimulus' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEventChainAccess().getStimulusKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventChainRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventChainAccess().getStimulusEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='response' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEventChainAccess().getResponseKeyword_5());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventChainRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventChainAccess().getResponseEventCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='eventChains' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEventChainAccess().getEventChainsKeyword_7_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventChainRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventChainAccess().getSegmentEventCrossReference_7_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEventChainAccess().getCommaKeyword_7_2_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventChainRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEventChainAccess().getSegmentEventCrossReference_7_2_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEventChainAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleTimingConstraint
entryRuleTimingConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimingConstraintRule()); }
	 iv_ruleTimingConstraint=ruleTimingConstraint 
	 { $current=$iv_ruleTimingConstraint.current; } 
	 EOF 
;

// Rule TimingConstraint
ruleTimingConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getDelayConstraintParserRuleCall_0()); 
    }
    this_DelayConstraint_0=ruleDelayConstraint
    { 
        $current = $this_DelayConstraint_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getRepetitionConstraintParserRuleCall_1()); 
    }
    this_RepetitionConstraint_1=ruleRepetitionConstraint
    { 
        $current = $this_RepetitionConstraint_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getSynchronizationConstraintParserRuleCall_2()); 
    }
    this_SynchronizationConstraint_2=ruleSynchronizationConstraint
    { 
        $current = $this_SynchronizationConstraint_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getOrderConstraintParserRuleCall_3()); 
    }
    this_OrderConstraint_3=ruleOrderConstraint
    { 
        $current = $this_OrderConstraint_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getPatternConstraintParserRuleCall_4()); 
    }
    this_PatternConstraint_4=rulePatternConstraint
    { 
        $current = $this_PatternConstraint_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getSporadicConstraintParserRuleCall_5()); 
    }
    this_SporadicConstraint_5=ruleSporadicConstraint
    { 
        $current = $this_SporadicConstraint_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getPeriodicConstraintParserRuleCall_6()); 
    }
    this_PeriodicConstraint_6=rulePeriodicConstraint
    { 
        $current = $this_PeriodicConstraint_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getArbitraryConstraintParserRuleCall_7()); 
    }
    this_ArbitraryConstraint_7=ruleArbitraryConstraint
    { 
        $current = $this_ArbitraryConstraint_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getBurstConstraintParserRuleCall_8()); 
    }
    this_BurstConstraint_8=ruleBurstConstraint
    { 
        $current = $this_BurstConstraint_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getReactionConstraintParserRuleCall_9()); 
    }
    this_ReactionConstraint_9=ruleReactionConstraint
    { 
        $current = $this_ReactionConstraint_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingConstraintAccess().getAgeConstraintParserRuleCall_10()); 
    }
    this_AgeConstraint_10=ruleAgeConstraint
    { 
        $current = $this_AgeConstraint_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDelayConstraint
entryRuleDelayConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDelayConstraintRule()); }
	 iv_ruleDelayConstraint=ruleDelayConstraint 
	 { $current=$iv_ruleDelayConstraint.current; } 
	 EOF 
;

// Rule DelayConstraint
ruleDelayConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DelayConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDelayConstraintAccess().getDelayConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelayConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDelayConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='source' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDelayConstraintAccess().getSourceKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelayConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getSourceEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='target' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDelayConstraintAccess().getTargetKeyword_5());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDelayConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getTargetEventCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='lower' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDelayConstraintAccess().getLowerKeyword_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDelayConstraintAccess().getEqualsSignKeyword_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getLowerSymbolicTimingExpressionParserRuleCall_9_0_0()); 
	    }
		lv_lower_9_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelayConstraintRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_9_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getLowerValueTimingExpressionParserRuleCall_9_1_0()); 
	    }
		lv_lower_10_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelayConstraintRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_10_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_11='upper' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDelayConstraintAccess().getUpperKeyword_10());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDelayConstraintAccess().getEqualsSignKeyword_11());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getUpperSymbolicTimingExpressionParserRuleCall_12_0_0()); 
	    }
		lv_upper_13_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelayConstraintRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_13_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDelayConstraintAccess().getUpperValueTimingExpressionParserRuleCall_12_1_0()); 
	    }
		lv_upper_14_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDelayConstraintRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_14_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDelayConstraintAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleRepetitionConstraint
entryRuleRepetitionConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRepetitionConstraintRule()); }
	 iv_ruleRepetitionConstraint=ruleRepetitionConstraint 
	 { $current=$iv_ruleRepetitionConstraint.current; } 
	 EOF 
;

// Rule RepetitionConstraint
ruleRepetitionConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RepetitionConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRepetitionConstraintAccess().getRepetitionConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRepetitionConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRepetitionConstraintAccess().getEventKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepetitionConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getEventEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='span' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRepetitionConstraintAccess().getSpanKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRepetitionConstraintAccess().getEqualsSignKeyword_6());
    }
(
(
		lv_span_7_0=RULE_INT
		{
			newLeafNode(lv_span_7_0, grammarAccess.getRepetitionConstraintAccess().getSpanINTTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRepetitionConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"span",
        		lv_span_7_0, 
        		"INT");
	    }

)
)	otherlv_8='lower' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRepetitionConstraintAccess().getLowerKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRepetitionConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getLowerSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_lower_10_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_10_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getLowerValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_lower_11_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_11_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_12='upper' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getRepetitionConstraintAccess().getUpperKeyword_11());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRepetitionConstraintAccess().getEqualsSignKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getUpperSymbolicTimingExpressionParserRuleCall_13_0_0()); 
	    }
		lv_upper_14_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_14_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getUpperValueTimingExpressionParserRuleCall_13_1_0()); 
	    }
		lv_upper_15_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_15_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_16='jitter' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getRepetitionConstraintAccess().getJitterKeyword_14());
    }
	otherlv_17='=' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getRepetitionConstraintAccess().getEqualsSignKeyword_15());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getJitterSymbolicTimingExpressionParserRuleCall_16_0_0()); 
	    }
		lv_jitter_18_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_18_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getRepetitionConstraintAccess().getJitterValueTimingExpressionParserRuleCall_16_1_0()); 
	    }
		lv_jitter_19_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRepetitionConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_19_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_20='}' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getRepetitionConstraintAccess().getRightCurlyBracketKeyword_17());
    }
)
;





// Entry rule entryRuleSynchronizationConstraint
entryRuleSynchronizationConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSynchronizationConstraintRule()); }
	 iv_ruleSynchronizationConstraint=ruleSynchronizationConstraint 
	 { $current=$iv_ruleSynchronizationConstraint.current; } 
	 EOF 
;

// Rule SynchronizationConstraint
ruleSynchronizationConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SynchronizationConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSynchronizationConstraintAccess().getSynchronizationConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSynchronizationConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSynchronizationConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSynchronizationConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='events' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSynchronizationConstraintAccess().getEventsKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchronizationConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSynchronizationConstraintAccess().getEventsEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSynchronizationConstraintAccess().getCommaKeyword_5());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchronizationConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSynchronizationConstraintAccess().getEventsEventCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSynchronizationConstraintAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSynchronizationConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSynchronizationConstraintAccess().getEventsEventCrossReference_7_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='tolerance' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSynchronizationConstraintAccess().getToleranceKeyword_8());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSynchronizationConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSynchronizationConstraintAccess().getToleranceSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_tolerance_11_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSynchronizationConstraintRule());
	        }
       		set(
       			$current, 
       			"tolerance",
        		lv_tolerance_11_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSynchronizationConstraintAccess().getToleranceValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_tolerance_12_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSynchronizationConstraintRule());
	        }
       		set(
       			$current, 
       			"tolerance",
        		lv_tolerance_12_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSynchronizationConstraintAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleOrderConstraint
entryRuleOrderConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderConstraintRule()); }
	 iv_ruleOrderConstraint=ruleOrderConstraint 
	 { $current=$iv_ruleOrderConstraint.current; } 
	 EOF 
;

// Rule OrderConstraint
ruleOrderConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='OrderConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderConstraintAccess().getOrderConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrderConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='left' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderConstraintAccess().getLeftKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrderConstraintAccess().getLeftSymbolicTimingExpressionParserRuleCall_4_0_0()); 
	    }
		lv_left_4_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderConstraintRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_4_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderConstraintAccess().getLeftValueTimingExpressionParserRuleCall_4_1_0()); 
	    }
		lv_left_5_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderConstraintRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_5_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_6='right' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOrderConstraintAccess().getRightKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrderConstraintAccess().getRightSymbolicTimingExpressionParserRuleCall_6_0_0()); 
	    }
		lv_right_7_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderConstraintRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderConstraintAccess().getRightValueTimingExpressionParserRuleCall_6_1_0()); 
	    }
		lv_right_8_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderConstraintRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_8_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOrderConstraintAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePatternConstraint
entryRulePatternConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPatternConstraintRule()); }
	 iv_rulePatternConstraint=rulePatternConstraint 
	 { $current=$iv_rulePatternConstraint.current; } 
	 EOF 
;

// Rule PatternConstraint
rulePatternConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='PatternConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPatternConstraintAccess().getPatternConstraintKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getNameEStringParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPatternConstraintAccess().getLeftCurlyBracketKeyword_0_2());
    }
	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPatternConstraintAccess().getEventKeyword_0_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getEventEventCrossReference_0_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='ref' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPatternConstraintAccess().getRefKeyword_0_5());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPatternConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getRefEventCrossReference_0_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='minimum' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPatternConstraintAccess().getMinimumKeyword_0_7());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPatternConstraintAccess().getEqualsSignKeyword_0_8());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_0_9_0_0()); 
	    }
		lv_minimum_9_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_9_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_0_9_1_0()); 
	    }
		lv_minimum_10_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_10_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_11='jitter' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPatternConstraintAccess().getJitterKeyword_0_10());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPatternConstraintAccess().getEqualsSignKeyword_0_11());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getJitterSymbolicTimingExpressionParserRuleCall_0_12_0_0()); 
	    }
		lv_jitter_13_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_13_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getJitterValueTimingExpressionParserRuleCall_0_12_1_0()); 
	    }
		lv_jitter_14_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_14_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_15='offset' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPatternConstraintAccess().getOffsetKeyword_0_13());
    }
	otherlv_16='=' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPatternConstraintAccess().getEqualsSignKeyword_0_14());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getOffsetSymbolicTimingExpressionParserRuleCall_0_15_0()); 
	    }
		lv_offset_17_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		add(
       			$current, 
       			"offset",
        		lv_offset_17_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getOffsetValueTimingExpressionParserRuleCall_1_0_0()); 
	    }
		lv_offset_18_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		add(
       			$current, 
       			"offset",
        		lv_offset_18_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPatternConstraintAccess().getCommaKeyword_1_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getOffsetSymbolicTimingExpressionParserRuleCall_1_1_0_1_0()); 
	    }
		lv_offset_20_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		add(
       			$current, 
       			"offset",
        		lv_offset_20_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPatternConstraintAccess().getOffsetValueTimingExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_offset_21_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPatternConstraintRule());
	        }
       		add(
       			$current, 
       			"offset",
        		lv_offset_21_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPatternConstraintAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;





// Entry rule entryRuleSporadicConstraint
entryRuleSporadicConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSporadicConstraintRule()); }
	 iv_ruleSporadicConstraint=ruleSporadicConstraint 
	 { $current=$iv_ruleSporadicConstraint.current; } 
	 EOF 
;

// Rule SporadicConstraint
ruleSporadicConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SporadicConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSporadicConstraintAccess().getSporadicConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSporadicConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSporadicConstraintAccess().getEventKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSporadicConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getEventEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='lower' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSporadicConstraintAccess().getLowerKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSporadicConstraintAccess().getEqualsSignKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getLowerSymbolicTimingExpressionParserRuleCall_7_0_0()); 
	    }
		lv_lower_7_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_7_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getLowerValueTimingExpressionParserRuleCall_7_1_0()); 
	    }
		lv_lower_8_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_8_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='upper' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSporadicConstraintAccess().getUpperKeyword_8());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSporadicConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getUpperSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_upper_11_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_11_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getUpperValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_upper_12_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_12_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_13='jitter' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSporadicConstraintAccess().getJitterKeyword_11());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSporadicConstraintAccess().getEqualsSignKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getJitterSymbolicTimingExpressionParserRuleCall_13_0_0()); 
	    }
		lv_jitter_15_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_15_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getJitterValueTimingExpressionParserRuleCall_13_1_0()); 
	    }
		lv_jitter_16_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_16_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_17='minimum' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSporadicConstraintAccess().getMinimumKeyword_14());
    }
	otherlv_18='=' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSporadicConstraintAccess().getEqualsSignKeyword_15());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_16_0_0()); 
	    }
		lv_minimum_19_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_19_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSporadicConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_16_1_0()); 
	    }
		lv_minimum_20_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSporadicConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_20_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSporadicConstraintAccess().getRightCurlyBracketKeyword_17());
    }
)
;





// Entry rule entryRulePeriodicConstraint
entryRulePeriodicConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPeriodicConstraintRule()); }
	 iv_rulePeriodicConstraint=rulePeriodicConstraint 
	 { $current=$iv_rulePeriodicConstraint.current; } 
	 EOF 
;

// Rule PeriodicConstraint
rulePeriodicConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PeriodicConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPeriodicConstraintAccess().getPeriodicConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPeriodicConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPeriodicConstraintAccess().getEventKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPeriodicConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getEventEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='period' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPeriodicConstraintAccess().getPeriodKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPeriodicConstraintAccess().getEqualsSignKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getPeriodSymbolicTimingExpressionParserRuleCall_7_0_0()); 
	    }
		lv_period_7_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_7_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getPeriodValueTimingExpressionParserRuleCall_7_1_0()); 
	    }
		lv_period_8_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"period",
        		lv_period_8_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='minimum' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPeriodicConstraintAccess().getMinimumKeyword_8());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPeriodicConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_minimum_11_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_11_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_minimum_12_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_12_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_13='jitter' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPeriodicConstraintAccess().getJitterKeyword_11());
    }
	otherlv_14='=' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getPeriodicConstraintAccess().getEqualsSignKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getJitterSymbolicTimingExpressionParserRuleCall_13_0_0()); 
	    }
		lv_jitter_15_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_15_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPeriodicConstraintAccess().getJitterValueTimingExpressionParserRuleCall_13_1_0()); 
	    }
		lv_jitter_16_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPeriodicConstraintRule());
	        }
       		set(
       			$current, 
       			"jitter",
        		lv_jitter_16_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getPeriodicConstraintAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleArbitraryConstraint
entryRuleArbitraryConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArbitraryConstraintRule()); }
	 iv_ruleArbitraryConstraint=ruleArbitraryConstraint 
	 { $current=$iv_ruleArbitraryConstraint.current; } 
	 EOF 
;

// Rule ArbitraryConstraint
ruleArbitraryConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='ArbitraryConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArbitraryConstraintAccess().getArbitraryConstraintKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getNameEStringParserRuleCall_0_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArbitraryConstraintAccess().getLeftCurlyBracketKeyword_0_2());
    }
	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArbitraryConstraintAccess().getEventKeyword_0_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getArbitraryConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getEventEventCrossReference_0_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='minimum' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArbitraryConstraintAccess().getMinimumKeyword_0_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArbitraryConstraintAccess().getEqualsSignKeyword_0_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_0_7_0()); 
	    }
		lv_minimum_7_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"minimum",
        		lv_minimum_7_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_1_0_0()); 
	    }
		lv_minimum_8_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"minimum",
        		lv_minimum_8_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArbitraryConstraintAccess().getCommaKeyword_1_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_1_1_0_1_0()); 
	    }
		lv_minimum_10_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"minimum",
        		lv_minimum_10_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_minimum_11_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"minimum",
        		lv_minimum_11_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12='maximum' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getArbitraryConstraintAccess().getMaximumKeyword_1_2());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getArbitraryConstraintAccess().getEqualsSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMaximumSymbolicTimingExpressionParserRuleCall_1_4_0()); 
	    }
		lv_maximum_14_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"maximum",
        		lv_maximum_14_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMaximumValueTimingExpressionParserRuleCall_2_0_0()); 
	    }
		lv_maximum_15_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"maximum",
        		lv_maximum_15_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)((	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getArbitraryConstraintAccess().getCommaKeyword_2_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMaximumSymbolicTimingExpressionParserRuleCall_2_1_0_1_0()); 
	    }
		lv_maximum_17_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"maximum",
        		lv_maximum_17_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getArbitraryConstraintAccess().getMaximumValueTimingExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_maximum_18_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArbitraryConstraintRule());
	        }
       		add(
       			$current, 
       			"maximum",
        		lv_maximum_18_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getArbitraryConstraintAccess().getRightCurlyBracketKeyword_2_2());
    }
))
;





// Entry rule entryRuleBurstConstraint
entryRuleBurstConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBurstConstraintRule()); }
	 iv_ruleBurstConstraint=ruleBurstConstraint 
	 { $current=$iv_ruleBurstConstraint.current; } 
	 EOF 
;

// Rule BurstConstraint
ruleBurstConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='BurstConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBurstConstraintAccess().getBurstConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBurstConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBurstConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBurstConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='event' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBurstConstraintAccess().getEventKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBurstConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getBurstConstraintAccess().getEventEventCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='maxOccurrence' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBurstConstraintAccess().getMaxOccurrenceKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBurstConstraintAccess().getEqualsSignKeyword_6());
    }
(
(
		lv_maxOccurrence_7_0=RULE_INT
		{
			newLeafNode(lv_maxOccurrence_7_0, grammarAccess.getBurstConstraintAccess().getMaxOccurrenceINTTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBurstConstraintRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"maxOccurrence",
        		lv_maxOccurrence_7_0, 
        		"INT");
	    }

)
)	otherlv_8='length' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBurstConstraintAccess().getLengthKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBurstConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getBurstConstraintAccess().getLengthSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_length_10_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBurstConstraintRule());
	        }
       		set(
       			$current, 
       			"length",
        		lv_length_10_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBurstConstraintAccess().getLengthValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_length_11_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBurstConstraintRule());
	        }
       		set(
       			$current, 
       			"length",
        		lv_length_11_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_12='minimum' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBurstConstraintAccess().getMinimumKeyword_11());
    }
	otherlv_13='=' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBurstConstraintAccess().getEqualsSignKeyword_12());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getBurstConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_13_0_0()); 
	    }
		lv_minimum_14_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBurstConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_14_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBurstConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_13_1_0()); 
	    }
		lv_minimum_15_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBurstConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_15_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBurstConstraintAccess().getRightCurlyBracketKeyword_14());
    }
)
;





// Entry rule entryRuleReactionConstraint
entryRuleReactionConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReactionConstraintRule()); }
	 iv_ruleReactionConstraint=ruleReactionConstraint 
	 { $current=$iv_ruleReactionConstraint.current; } 
	 EOF 
;

// Rule ReactionConstraint
ruleReactionConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ReactionConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReactionConstraintAccess().getReactionConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReactionConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReactionConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReactionConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='scope' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReactionConstraintAccess().getScopeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getReactionConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getReactionConstraintAccess().getScopeEventChainCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='maximum' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReactionConstraintAccess().getMaximumKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getReactionConstraintAccess().getEqualsSignKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getReactionConstraintAccess().getMaximumSymbolicTimingExpressionParserRuleCall_7_0_0()); 
	    }
		lv_maximum_7_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReactionConstraintRule());
	        }
       		set(
       			$current, 
       			"maximum",
        		lv_maximum_7_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getReactionConstraintAccess().getMaximumValueTimingExpressionParserRuleCall_7_1_0()); 
	    }
		lv_maximum_8_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReactionConstraintRule());
	        }
       		set(
       			$current, 
       			"maximum",
        		lv_maximum_8_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='minimum' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getReactionConstraintAccess().getMinimumKeyword_8());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getReactionConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getReactionConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_minimum_11_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReactionConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_11_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getReactionConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_minimum_12_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReactionConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_12_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getReactionConstraintAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleAgeConstraint
entryRuleAgeConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAgeConstraintRule()); }
	 iv_ruleAgeConstraint=ruleAgeConstraint 
	 { $current=$iv_ruleAgeConstraint.current; } 
	 EOF 
;

// Rule AgeConstraint
ruleAgeConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='AgeConstraint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAgeConstraintAccess().getAgeConstraintKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAgeConstraintAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgeConstraintRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAgeConstraintAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='scope' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAgeConstraintAccess().getScopeKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAgeConstraintRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAgeConstraintAccess().getScopeEventChainCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='maximum' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAgeConstraintAccess().getMaximumKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAgeConstraintAccess().getEqualsSignKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAgeConstraintAccess().getMaximumSymbolicTimingExpressionParserRuleCall_7_0_0()); 
	    }
		lv_maximum_7_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgeConstraintRule());
	        }
       		set(
       			$current, 
       			"maximum",
        		lv_maximum_7_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgeConstraintAccess().getMaximumValueTimingExpressionParserRuleCall_7_1_0()); 
	    }
		lv_maximum_8_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgeConstraintRule());
	        }
       		set(
       			$current, 
       			"maximum",
        		lv_maximum_8_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_9='minimum' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAgeConstraintAccess().getMinimumKeyword_8());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAgeConstraintAccess().getEqualsSignKeyword_9());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAgeConstraintAccess().getMinimumSymbolicTimingExpressionParserRuleCall_10_0_0()); 
	    }
		lv_minimum_11_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgeConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_11_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getAgeConstraintAccess().getMinimumValueTimingExpressionParserRuleCall_10_1_0()); 
	    }
		lv_minimum_12_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAgeConstraintRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_12_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAgeConstraintAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleTimingExpression
entryRuleTimingExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimingExpressionRule()); }
	 iv_ruleTimingExpression=ruleTimingExpression 
	 { $current=$iv_ruleTimingExpression.current; } 
	 EOF 
;

// Rule TimingExpression
ruleTimingExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingExpressionAccess().getSymbolicTimingExpressionParserRuleCall_0()); 
    }
    this_SymbolicTimingExpression_0=ruleSymbolicTimingExpression
    { 
        $current = $this_SymbolicTimingExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingExpressionAccess().getVariableTimingExpressionParserRuleCall_1()); 
    }
    this_VariableTimingExpression_1=ruleVariableTimingExpression
    { 
        $current = $this_VariableTimingExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTimingExpressionAccess().getValueTimingExpressionParserRuleCall_2()); 
    }
    this_ValueTimingExpression_2=ruleValueTimingExpression
    { 
        $current = $this_ValueTimingExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	 iv_ruleAddition=ruleAddition 
	 { $current=$iv_ruleAddition.current; } 
	 EOF 
;

// Rule Addition
ruleAddition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAdditionAccess().getPlusSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditionAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleOperator
entryRuleOperator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperatorRule()); }
	 iv_ruleOperator=ruleOperator 
	 { $current=$iv_ruleOperator.current; } 
	 EOF 
;

// Rule Operator
ruleOperator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getAdditionParserRuleCall_0()); 
    }
    this_Addition_0=ruleAddition
    { 
        $current = $this_Addition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getSubtractionParserRuleCall_1()); 
    }
    this_Subtraction_1=ruleSubtraction
    { 
        $current = $this_Subtraction_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getMultiplicationParserRuleCall_2()); 
    }
    this_Multiplication_2=ruleMultiplication
    { 
        $current = $this_Multiplication_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getDivisionParserRuleCall_3()); 
    }
    this_Division_3=ruleDivision
    { 
        $current = $this_Division_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getAssignmentParserRuleCall_4()); 
    }
    this_Assignment_4=ruleAssignment
    { 
        $current = $this_Assignment_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getGreaterThanParserRuleCall_5()); 
    }
    this_GreaterThan_5=ruleGreaterThan
    { 
        $current = $this_GreaterThan_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getLessThanParserRuleCall_6()); 
    }
    this_LessThan_6=ruleLessThan
    { 
        $current = $this_LessThan_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getGreaterThanOrEqualParserRuleCall_7()); 
    }
    this_GreaterThanOrEqual_7=ruleGreaterThanOrEqual
    { 
        $current = $this_GreaterThanOrEqual_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperatorAccess().getLessThanOrEqualParserRuleCall_8()); 
    }
    this_LessThanOrEqual_8=ruleLessThanOrEqual
    { 
        $current = $this_LessThanOrEqual_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSymbolicTimingExpression
entryRuleSymbolicTimingExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSymbolicTimingExpressionRule()); }
	 iv_ruleSymbolicTimingExpression=ruleSymbolicTimingExpression 
	 { $current=$iv_ruleSymbolicTimingExpression.current; } 
	 EOF 
;

// Rule SymbolicTimingExpression
ruleSymbolicTimingExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSymbolicTimingExpressionAccess().getSymbolicTimingExpressionAction_0_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSymbolicTimingExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSymbolicTimingExpressionAccess().getVariableVariableTimingExpressionCrossReference_0_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSymbolicTimingExpressionAccess().getOperatorOperatorParserRuleCall_1_0()); 
	    }
		lv_operator_2_0=ruleOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSymbolicTimingExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"Operator");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVariableTimingExpression
entryRuleVariableTimingExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVariableTimingExpressionRule()); }
	 iv_ruleVariableTimingExpression=ruleVariableTimingExpression 
	 { $current=$iv_ruleVariableTimingExpression.current; } 
	 EOF 
;

// Rule VariableTimingExpression
ruleVariableTimingExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVariableTimingExpressionAccess().getVarKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableTimingExpressionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableTimingExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableTimingExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVariableTimingExpressionAccess().getUnitUnitCrossReference_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='on' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVariableTimingExpressionAccess().getOnKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getVariableTimingExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getVariableTimingExpressionAccess().getTimeBaseTimeBaseCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=':=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getVariableTimingExpressionAccess().getColonEqualsSignKeyword_5_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getVariableTimingExpressionAccess().getValueSymbolicTimingExpressionParserRuleCall_5_1_0_0()); 
	    }
		lv_value_6_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableTimingExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getVariableTimingExpressionAccess().getValueValueTimingExpressionParserRuleCall_5_1_1_0()); 
	    }
		lv_value_7_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVariableTimingExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_7_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))?)
;





// Entry rule entryRuleValueTimingExpression
entryRuleValueTimingExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueTimingExpressionRule()); }
	 iv_ruleValueTimingExpression=ruleValueTimingExpression 
	 { $current=$iv_ruleValueTimingExpression.current; } 
	 EOF 
;

// Rule ValueTimingExpression
ruleValueTimingExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getValueTimingExpressionAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTimingExpressionAccess().getValueEDoubleParserRuleCall_0_1_0()); 
	    }
		lv_value_1_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTimingExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTimingExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getValueTimingExpressionAccess().getUnitUnitCrossReference_0_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='on' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getValueTimingExpressionAccess().getOnKeyword_0_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getValueTimingExpressionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getValueTimingExpressionAccess().getTimeBaseTimeBaseCrossReference_0_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getValueTimingExpressionAccess().getRightParenthesisKeyword_0_4());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getValueTimingExpressionAccess().getValueEDoubleParserRuleCall_1_0()); 
	    }
		lv_value_6_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueTimingExpressionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSubtraction
entryRuleSubtraction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubtractionRule()); }
	 iv_ruleSubtraction=ruleSubtraction 
	 { $current=$iv_ruleSubtraction.current; } 
	 EOF 
;

// Rule Subtraction
ruleSubtraction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubtractionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubtractionAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubtractionRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='-' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubtractionAccess().getHyphenMinusKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubtractionAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubtractionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSubtractionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	 iv_ruleMultiplication=ruleMultiplication 
	 { $current=$iv_ruleMultiplication.current; } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='*' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicationAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicationRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleDivision
entryRuleDivision returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDivisionRule()); }
	 iv_ruleDivision=ruleDivision 
	 { $current=$iv_ruleDivision.current; } 
	 EOF 
;

// Rule Division
ruleDivision returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDivisionAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDivisionRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='/' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDivisionAccess().getSolidusKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDivisionAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDivisionRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAssignmentAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleGreaterThan
entryRuleGreaterThan returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGreaterThanRule()); }
	 iv_ruleGreaterThan=ruleGreaterThan 
	 { $current=$iv_ruleGreaterThan.current; } 
	 EOF 
;

// Rule GreaterThan
ruleGreaterThan returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGreaterThanAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGreaterThanAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGreaterThanRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGreaterThanAccess().getGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGreaterThanAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGreaterThanRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGreaterThanAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLessThan
entryRuleLessThan returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLessThanRule()); }
	 iv_ruleLessThan=ruleLessThan 
	 { $current=$iv_ruleLessThan.current; } 
	 EOF 
;

// Rule LessThan
ruleLessThan returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLessThanAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLessThanAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLessThanRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLessThanAccess().getLessThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLessThanAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLessThanRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLessThanAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleGreaterThanOrEqual
entryRuleGreaterThanOrEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGreaterThanOrEqualRule()); }
	 iv_ruleGreaterThanOrEqual=ruleGreaterThanOrEqual 
	 { $current=$iv_ruleGreaterThanOrEqual.current; } 
	 EOF 
;

// Rule GreaterThanOrEqual
ruleGreaterThanOrEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGreaterThanOrEqualAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGreaterThanOrEqualAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGreaterThanOrEqualRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGreaterThanOrEqualAccess().getEqualsSignGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGreaterThanOrEqualAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGreaterThanOrEqualRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGreaterThanOrEqualAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLessThanOrEqual
entryRuleLessThanOrEqual returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLessThanOrEqualRule()); }
	 iv_ruleLessThanOrEqual=ruleLessThanOrEqual 
	 { $current=$iv_ruleLessThanOrEqual.current; } 
	 EOF 
;

// Rule LessThanOrEqual
ruleLessThanOrEqual returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLessThanOrEqualAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLessThanOrEqualAccess().getLeftOperandTimingExpressionParserRuleCall_1_0()); 
	    }
		lv_leftOperand_1_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLessThanOrEqualRule());
	        }
       		set(
       			$current, 
       			"leftOperand",
        		lv_leftOperand_1_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLessThanOrEqualAccess().getLessThanSignEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLessThanOrEqualAccess().getRightOperandTimingExpressionParserRuleCall_3_0()); 
	    }
		lv_rightOperand_3_0=ruleTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLessThanOrEqualRule());
	        }
       		set(
       			$current, 
       			"rightOperand",
        		lv_rightOperand_3_0, 
        		"TimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLessThanOrEqualAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleTimeBase
entryRuleTimeBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeBaseRule()); }
	 iv_ruleTimeBase=ruleTimeBase 
	 { $current=$iv_ruleTimeBase.current; } 
	 EOF 
;

// Rule TimeBase
ruleTimeBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TimeBase' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTimeBaseAccess().getTimeBaseKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTimeBaseAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='dimension' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTimeBaseAccess().getDimensionKeyword_3());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeBaseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseAccess().getTypeDimensionCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='precisionFactor' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTimeBaseAccess().getPrecisionFactorKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseAccess().getPrecisionFactorEDoubleParserRuleCall_5_1_0()); 
	    }
		lv_precisionFactor_6_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRule());
	        }
       		set(
       			$current, 
       			"precisionFactor",
        		lv_precisionFactor_6_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='precisionUnit' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTimeBaseAccess().getPrecisionUnitKeyword_6_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeBaseRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseAccess().getPrecisionUnitUnitCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTimeBaseAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleUnit
entryRuleUnit returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnitRule()); }
	 iv_ruleUnit=ruleUnit 
	 { $current=$iv_ruleUnit.current; } 
	 EOF 
;

// Rule Unit
ruleUnit returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnitAccess().getUnitAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnitAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnitRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnitAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='factor' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnitAccess().getFactorKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnitAccess().getFactorEDoubleParserRuleCall_3_1_0()); 
	    }
		lv_factor_4_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnitRule());
	        }
       		set(
       			$current, 
       			"factor",
        		lv_factor_4_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='offset' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getUnitAccess().getOffsetKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnitAccess().getOffsetEDoubleParserRuleCall_4_1_0()); 
	    }
		lv_offset_6_0=ruleEDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnitRule());
	        }
       		set(
       			$current, 
       			"offset",
        		lv_offset_6_0, 
        		"EDouble");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='reference' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUnitAccess().getReferenceKeyword_5_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnitRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getUnitAccess().getReferenceUnitCrossReference_5_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUnitAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleDimension
entryRuleDimension returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDimensionRule()); }
	 iv_ruleDimension=ruleDimension 
	 { $current=$iv_ruleDimension.current; } 
	 EOF 
;

// Rule Dimension
ruleDimension returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Dimension' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDimensionAccess().getDimensionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDimensionAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='kind' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDimensionAccess().getKindKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionAccess().getKindDimensionKindEnumRuleCall_3_1_0()); 
	    }
		lv_kind_4_0=ruleDimensionKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_4_0, 
        		"DimensionKind");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='Units' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDimensionAccess().getUnitsKeyword_4());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDimensionAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionAccess().getUnitsUnitParserRuleCall_6_0()); 
	    }
		lv_units_7_0=ruleUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionRule());
	        }
       		add(
       			$current, 
       			"units",
        		lv_units_7_0, 
        		"Unit");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDimensionAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDimensionAccess().getUnitsUnitParserRuleCall_7_1_0()); 
	    }
		lv_units_9_0=ruleUnit		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDimensionRule());
	        }
       		add(
       			$current, 
       			"units",
        		lv_units_9_0, 
        		"Unit");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDimensionAccess().getRightCurlyBracketKeyword_8());
    }
	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDimensionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleTimeBaseRelation
entryRuleTimeBaseRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeBaseRelationRule()); }
	 iv_ruleTimeBaseRelation=ruleTimeBaseRelation 
	 { $current=$iv_ruleTimeBaseRelation.current; } 
	 EOF 
;

// Rule TimeBaseRelation
ruleTimeBaseRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TimeBaseRelation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTimeBaseRelationAccess().getTimeBaseRelationKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTimeBaseRelationAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getLeftSymbolicTimingExpressionParserRuleCall_3_0_0()); 
	    }
		lv_left_3_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_3_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTimeBaseRelationAccess().getLeftParenthesisKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getLeftVariableTimingExpressionParserRuleCall_3_1_1_0()); 
	    }
		lv_left_5_0=ruleVariableTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_5_0, 
        		"VariableTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTimeBaseRelationAccess().getRightParenthesisKeyword_3_1_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getLeftValueTimingExpressionParserRuleCall_3_2_0()); 
	    }
		lv_left_7_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"left",
        		lv_left_7_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTimeBaseRelationAccess().getEqualsSignKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getRightSymbolicTimingExpressionParserRuleCall_5_0_0()); 
	    }
		lv_right_9_0=ruleSymbolicTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_9_0, 
        		"SymbolicTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_10='(' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTimeBaseRelationAccess().getLeftParenthesisKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getRightVariableTimingExpressionParserRuleCall_5_1_1_0()); 
	    }
		lv_right_11_0=ruleVariableTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_11_0, 
        		"VariableTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTimeBaseRelationAccess().getRightParenthesisKeyword_5_1_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTimeBaseRelationAccess().getRightValueTimingExpressionParserRuleCall_5_2_0()); 
	    }
		lv_right_13_0=ruleValueTimingExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeBaseRelationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_13_0, 
        		"ValueTimingExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTimeBaseRelationAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); } 
	 iv_ruleEDouble=ruleEDouble 
	 { $current=$iv_ruleEDouble.current.getText(); }  
	 EOF 
;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); 
    }
)?(    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); 
    }
)?
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); 
    }
((
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); 
    }

    |
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); 
    }
)(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); 
    }
)?    this_INT_7=RULE_INT    {
		$current.merge(this_INT_7);
    }

    { 
    newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); 
    }
)?)
    ;





// Rule DimensionKind
ruleDimensionKind returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='other' 
	{
        $current = grammarAccess.getDimensionKindAccess().getOtherEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDimensionKindAccess().getOtherEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Time' 
	{
        $current = grammarAccess.getDimensionKindAccess().getTimeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDimensionKindAccess().getTimeEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Angle' 
	{
        $current = grammarAccess.getDimensionKindAccess().getAngleEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDimensionKindAccess().getAngleEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Distance' 
	{
        $current = grammarAccess.getDimensionKindAccess().getDistanceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDimensionKindAccess().getDistanceEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


