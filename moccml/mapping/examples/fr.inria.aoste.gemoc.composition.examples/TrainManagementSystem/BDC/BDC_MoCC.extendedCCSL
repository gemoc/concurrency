ClockConstraintSystem BDC {
	imports {
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as kernel ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as CCSL ;
		import "platform:/resource/fr.inria.aoste.gemoc.composition.examples/TrainManagementSystem/BDC/TFSMMoC.ccslLib" as
		TFSMMoC ;
		import "platform:/resource/fr.inria.aoste.gemoc.composition.examples/TrainManagementSystem/BDC/BDC.tfsm" as System ;
	}
	entryBlock mainBlock
	Block mainBlock {
		Expression doCloseintermediate_AllTriggeringOccurrences1 = Union
		( Clock2 -> Up_to_isClosing_fire,
		Clock1 -> Up_to_isClosing_fire )
		Expression TrainComingintermediate_AllTriggeringOccurrences1 = Union
		( Clock2 -> S0_to_S1_fire,
		Clock1 -> S0_to_S1_fire )
		Expression doOpenintermediate_AllTriggeringOccurrences1 = Union
		( Clock2 -> Down_to_isOpenning_fire,
		Clock1 -> Down_to_isOpenning_fire )
		Expression TrainFarEnoughintermediate_AllTriggeringOccurrences1 = Union
		( Clock2 -> S1_to_S2_fire,
		Clock1 -> S1_to_S2_fire )
		Expression Up_to_isClosing_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> Up_entering,
		SampledOnTrigger -> TrainComing_occurs )
		Expression isClosing_to_Down_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> Closing_entering,
		SampledOnTrigger -> Closed_occurs )
		Expression initState_to_Up_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> initState_entering,
		SampledOnTrigger -> start_occurs )
		Expression initState0_to_S0_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> initState0_entering,
		SampledOnTrigger -> start_occurs )
		Expression isOpenning_to_Up_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> Opening_entering,
		SampledOnTrigger -> Opened_occurs )
		Expression Down_to_isOpenning_SampledOn_eventOccursAfterOrWhileStateEntering = SampledOn
		( SampledOnSampledClock -> Down_entering,
		SampledOnTrigger -> TrainFarEnough_occurs )
		Expression S1_to_S2_DelayFor_delayIsExpired_wrt_StateEntering = DelayFor
		( DelayForClockToDelay -> S1_entering,
		DelayForClockForCounting -> scenarClock_ticks,
		DelayForDelay -> S1_to_S2guardTemporal1_afterDuration )
		Expression S0_to_S1_DelayFor_delayIsExpired_wrt_StateEntering = DelayFor
		( DelayForClockToDelay -> S0_entering,
		DelayForClockForCounting -> scenarClock_ticks,
		DelayForDelay -> S0_to_S1guardTemp0_afterDuration )
		Expression S0intermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> S0_to_S1_fire,
		Clock1 -> S0_to_S1_fire )
		Expression initStateintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> initState_to_Up_fire,
		Clock1 -> initState_to_Up_fire )
		Expression initState0intermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> initState0_to_S0_fire,
		Clock1 -> initState0_to_S0_fire )
		Expression Upintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> Up_to_isClosing_fire,
		Clock1 -> Up_to_isClosing_fire )
		Expression Closingintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> isClosing_to_Down_fire,
		Clock1 -> isClosing_to_Down_fire )
		Expression S1intermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> S1_to_S2_fire,
		Clock1 -> S1_to_S2_fire )
		Expression Downintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> Down_to_isOpenning_fire,
		Clock1 -> Down_to_isOpenning_fire )
		Expression Openingintermediate_allFiredoutgoingTransition1 = Union
		( Clock2 -> isOpenning_to_Up_fire,
		Clock1 -> isOpenning_to_Up_fire )
		Expression S0intermediate_allInputTransition1 = Union
		( Clock2 -> initState0_to_S0_fire,
		Clock1 -> initState0_to_S0_fire )
		Expression Upintermediate_allInputTransition1 = Union
		( Clock2 -> initState_to_Up_fire,
		Clock1 -> isOpenning_to_Up_fire )
		Expression S2intermediate_allInputTransition1 = Union
		( Clock2 -> S1_to_S2_fire,
		Clock1 -> S1_to_S2_fire )
		Expression Closingintermediate_allInputTransition1 = Union
		( Clock2 -> Up_to_isClosing_fire,
		Clock1 -> Up_to_isClosing_fire )
		Expression S1intermediate_allInputTransition1 = Union
		( Clock2 -> S0_to_S1_fire,
		Clock1 -> S0_to_S1_fire )
		Expression Downintermediate_allInputTransition1 = Union
		( Clock2 -> isClosing_to_Down_fire,
		Clock1 -> isClosing_to_Down_fire )
		Expression Openingintermediate_allInputTransition1 = Union
		( Clock2 -> Down_to_isOpenning_fire,
		Clock1 -> Down_to_isOpenning_fire )
		Expression RailRoadControlintermediate_onlyOneFirst1 = OneTickAndNoMore
		( OneTickAndNoMoreClock -> RailRoadControl_start )
		Expression TrainArrivingDepartingintermediate_onlyOneFirst1 = OneTickAndNoMore
		( OneTickAndNoMoreClock -> TrainArrivingDeparting_start )
		Relation doCloseFSMEventSendReceive_occursWhenSolicitate [ FSMEventSendReceive ]
		( ClockA -> doCloseintermediate_AllTriggeringOccurrences1,
		ClockB -> doClose_occurs )
		Relation TrainComingFSMEventSendReceive_occursWhenSolicitate [ FSMEventSendReceive ]
		( ClockA -> TrainComingintermediate_AllTriggeringOccurrences1,
		ClockB -> TrainComing_occurs )
		Relation doOpenFSMEventSendReceive_occursWhenSolicitate [ FSMEventSendReceive ]
		( ClockA -> doOpenintermediate_AllTriggeringOccurrences1,
		ClockB -> doOpen_occurs )
		Relation TrainFarEnoughFSMEventSendReceive_occursWhenSolicitate [ FSMEventSendReceive ]
		( ClockA -> TrainFarEnoughintermediate_AllTriggeringOccurrences1,
		ClockB -> TrainFarEnough_occurs )
		Relation Up_to_isClosingCoincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> Up_to_isClosing_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> Up_to_isClosing_fire )
		Relation isClosing_to_DownCoincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> isClosing_to_Down_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> isClosing_to_Down_fire )
		Relation initState_to_UpCoincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> initState_to_Up_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> initState_to_Up_fire )
		Relation initState0_to_S0Coincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> initState0_to_S0_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> initState0_to_S0_fire )
		Relation isOpenning_to_UpCoincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> isOpenning_to_Up_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> isOpenning_to_Up_fire )
		Relation Down_to_isOpenningCoincides_fireWhenEventOccursOneTransition [ Coincides ]
		( Clock2 -> Down_to_isOpenning_SampledOn_eventOccursAfterOrWhileStateEntering,
		Clock1 -> Down_to_isOpenning_fire )
		Relation S1_to_S2Coincides_fireWhenTemporalGuardHoldsOneTransition [ Coincides ]
		( Clock2 -> S1_to_S2_DelayFor_delayIsExpired_wrt_StateEntering,
		Clock1 -> S1_to_S2_fire )
		Relation S0_to_S1Coincides_fireWhenTemporalGuardHoldsOneTransition [ Coincides ]
		( Clock2 -> S0_to_S1_DelayFor_delayIsExpired_wrt_StateEntering,
		Clock1 -> S0_to_S1_fire )
		Relation S0Alternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> S0_entering,
		AlternatesRightClock -> S0_leaving )
		Relation initStateAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> initState_entering,
		AlternatesRightClock -> initState_leaving )
		Relation initState0Alternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> initState0_entering,
		AlternatesRightClock -> initState0_leaving )
		Relation UpAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> Up_entering,
		AlternatesRightClock -> Up_leaving )
		Relation S2Alternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> S2_entering,
		AlternatesRightClock -> S2_leaving )
		Relation ClosingAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> Closing_entering,
		AlternatesRightClock -> Closing_leaving )
		Relation S1Alternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> S1_entering,
		AlternatesRightClock -> S1_leaving )
		Relation DownAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> Down_entering,
		AlternatesRightClock -> Down_leaving )
		Relation OpeningAlternates_enterOnceBeforeToLeave [ Alternates ]
		( AlternatesLeftClock -> Opening_entering,
		AlternatesRightClock -> Opening_leaving )
		Relation S0Coincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> S0intermediate_allFiredoutgoingTransition1,
		Clock1 -> S0_leaving )
		Relation initStateCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> initStateintermediate_allFiredoutgoingTransition1,
		Clock1 -> initState_leaving )
		Relation initState0Coincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> initState0intermediate_allFiredoutgoingTransition1,
		Clock1 -> initState0_leaving )
		Relation UpCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> Upintermediate_allFiredoutgoingTransition1,
		Clock1 -> Up_leaving )
		Relation ClosingCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> Closingintermediate_allFiredoutgoingTransition1,
		Clock1 -> Closing_leaving )
		Relation S1Coincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> S1intermediate_allFiredoutgoingTransition1,
		Clock1 -> S1_leaving )
		Relation DownCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> Downintermediate_allFiredoutgoingTransition1,
		Clock1 -> Down_leaving )
		Relation OpeningCoincides_firingATransitionAlternatesWithLeavingState [ Coincides ]
		( Clock2 -> Openingintermediate_allFiredoutgoingTransition1,
		Clock1 -> Opening_leaving )
		Relation S0Causes_stateEntering [ Causes ]
		( LeftClock -> S0intermediate_allInputTransition1,
		RightClock -> S0_entering )
		Relation UpCauses_stateEntering [ Causes ]
		( LeftClock -> Upintermediate_allInputTransition1,
		RightClock -> Up_entering )
		Relation S2Causes_stateEntering [ Causes ]
		( LeftClock -> S2intermediate_allInputTransition1,
		RightClock -> S2_entering )
		Relation ClosingCauses_stateEntering [ Causes ]
		( LeftClock -> Closingintermediate_allInputTransition1,
		RightClock -> Closing_entering )
		Relation S1Causes_stateEntering [ Causes ]
		( LeftClock -> S1intermediate_allInputTransition1,
		RightClock -> S1_entering )
		Relation DownCauses_stateEntering [ Causes ]
		( LeftClock -> Downintermediate_allInputTransition1,
		RightClock -> Down_entering )
		Relation OpeningCauses_stateEntering [ Causes ]
		( LeftClock -> Openingintermediate_allInputTransition1,
		RightClock -> Opening_entering )
		Relation RailRoadControlintermediate_oneStateAtATime1_2 [ Exclusion ]
		( Clock1 -> initState_entering,
		Clock2 -> Up_entering )
		Relation RailRoadControlintermediate_oneStateAtATime1_3 [ Exclusion ]
		( Clock1 -> initState_entering,
		Clock2 -> Closing_entering )
		Relation RailRoadControlintermediate_oneStateAtATime1_4 [ Exclusion ]
		( Clock1 -> initState_entering,
		Clock2 -> Down_entering )
		Relation RailRoadControlintermediate_oneStateAtATime1_5 [ Exclusion ]
		( Clock1 -> initState_entering,
		Clock2 -> Opening_entering )
		Relation RailRoadControlintermediate_oneStateAtATime2_3 [ Exclusion ]
		( Clock1 -> Up_entering,
		Clock2 -> Closing_entering )
		Relation RailRoadControlintermediate_oneStateAtATime2_4 [ Exclusion ]
		( Clock1 -> Up_entering,
		Clock2 -> Down_entering )
		Relation RailRoadControlintermediate_oneStateAtATime2_5 [ Exclusion ]
		( Clock1 -> Up_entering,
		Clock2 -> Opening_entering )
		Relation RailRoadControlintermediate_oneStateAtATime3_4 [ Exclusion ]
		( Clock1 -> Closing_entering,
		Clock2 -> Down_entering )
		Relation RailRoadControlintermediate_oneStateAtATime3_5 [ Exclusion ]
		( Clock1 -> Closing_entering,
		Clock2 -> Opening_entering )
		Relation RailRoadControlintermediate_oneStateAtATime4_5 [ Exclusion ]
		( Clock1 -> Down_entering,
		Clock2 -> Opening_entering )
		Relation TrainArrivingDepartingintermediate_oneStateAtATime1_2 [ Exclusion ]
		( Clock1 -> initState0_entering,
		Clock2 -> S0_entering )
		Relation TrainArrivingDepartingintermediate_oneStateAtATime1_3 [ Exclusion ]
		( Clock1 -> initState0_entering,
		Clock2 -> S1_entering )
		Relation TrainArrivingDepartingintermediate_oneStateAtATime1_4 [ Exclusion ]
		( Clock1 -> initState0_entering,
		Clock2 -> S2_entering )
		Relation TrainArrivingDepartingintermediate_oneStateAtATime2_3 [ Exclusion ]
		( Clock1 -> S0_entering,
		Clock2 -> S1_entering )
		Relation TrainArrivingDepartingintermediate_oneStateAtATime2_4 [ Exclusion ]
		( Clock1 -> S0_entering,
		Clock2 -> S2_entering )
		Relation TrainArrivingDepartingintermediate_oneStateAtATime3_4 [ Exclusion ]
		( Clock1 -> S1_entering,
		Clock2 -> S2_entering )
		Relation RailRoadControlintermediate_oneTransitionAtATime1_2 [ Exclusion ]
		( Clock1 -> initState_to_Up_fire,
		Clock2 -> Up_to_isClosing_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime1_3 [ Exclusion ]
		( Clock1 -> initState_to_Up_fire,
		Clock2 -> isClosing_to_Down_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime1_4 [ Exclusion ]
		( Clock1 -> initState_to_Up_fire,
		Clock2 -> Down_to_isOpenning_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime1_5 [ Exclusion ]
		( Clock1 -> initState_to_Up_fire,
		Clock2 -> isOpenning_to_Up_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime2_3 [ Exclusion ]
		( Clock1 -> Up_to_isClosing_fire,
		Clock2 -> isClosing_to_Down_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime2_4 [ Exclusion ]
		( Clock1 -> Up_to_isClosing_fire,
		Clock2 -> Down_to_isOpenning_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime2_5 [ Exclusion ]
		( Clock1 -> Up_to_isClosing_fire,
		Clock2 -> isOpenning_to_Up_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime3_4 [ Exclusion ]
		( Clock1 -> isClosing_to_Down_fire,
		Clock2 -> Down_to_isOpenning_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime3_5 [ Exclusion ]
		( Clock1 -> isClosing_to_Down_fire,
		Clock2 -> isOpenning_to_Up_fire )
		Relation RailRoadControlintermediate_oneTransitionAtATime4_5 [ Exclusion ]
		( Clock1 -> Down_to_isOpenning_fire,
		Clock2 -> isOpenning_to_Up_fire )
		Relation TrainArrivingDepartingintermediate_oneTransitionAtATime1_2 [ Exclusion ]
		( Clock1 -> initState0_to_S0_fire,
		Clock2 -> S0_to_S1_fire )
		Relation TrainArrivingDepartingintermediate_oneTransitionAtATime1_3 [ Exclusion ]
		( Clock1 -> initState0_to_S0_fire,
		Clock2 -> S1_to_S2_fire )
		Relation TrainArrivingDepartingintermediate_oneTransitionAtATime2_3 [ Exclusion ]
		( Clock1 -> S0_to_S1_fire,
		Clock2 -> S1_to_S2_fire )
		Relation RailRoadControlCoincides_firstIsInitialState [ Coincides ]
		( Clock2 -> RailRoadControl_start,
		Clock1 -> initState_entering )
		Relation TrainArrivingDepartingCoincides_firstIsInitialState [ Coincides ]
		( Clock2 -> TrainArrivingDeparting_start,
		Clock1 -> initState0_entering )
		Relation RailRoadControlCoincides_firstOnlyOnce [ Coincides ]
		( Clock2 -> RailRoadControl_start,
		Clock1 -> RailRoadControlintermediate_onlyOneFirst1 )
		Relation TrainArrivingDepartingCoincides_firstOnlyOnce [ Coincides ]
		( Clock2 -> TrainArrivingDeparting_start,
		Clock1 -> TrainArrivingDepartingintermediate_onlyOneFirst1 )
		Clock doClose_occurs : clock -> evt_doClose_occurs
		( "System->doClose" )
		Clock TrainComing_occurs : clock -> evt_TrainComing_occurs
		( "System->TrainComing" )
		Clock start_occurs : clock -> evt_start_occurs
		( "System->start" )
		Clock doOpen_occurs : clock -> evt_doOpen_occurs
		( "System->doOpen" )
		Clock Opened_occurs : clock -> evt_Opened_occurs
		( "System->Opened" )
		Clock Closed_occurs : clock -> evt_Closed_occurs
		( "System->Closed" )
		Clock TrainFarEnough_occurs : clock -> evt_TrainFarEnough_occurs
		( "System->TrainFarEnough" )
		Clock scenarClock_ticks : clock -> evt_scenarClock_ticks
		( )
		Clock Up_to_isClosing_fire : clock -> evt_Up_to_isClosing_fire
		( )
		Clock isClosing_to_Down_fire : clock -> evt_isClosing_to_Down_fire
		( )
		Clock initState_to_Up_fire : clock -> evt_initState_to_Up_fire
		( )
		Clock initState0_to_S0_fire : clock -> evt_initState0_to_S0_fire
		( )
		Clock S1_to_S2_fire : clock -> evt_S1_to_S2_fire
		( )
		Clock isOpenning_to_Up_fire : clock -> evt_isOpenning_to_Up_fire
		( )
		Clock S0_to_S1_fire : clock -> evt_S0_to_S1_fire
		( )
		Clock Down_to_isOpenning_fire : clock -> evt_Down_to_isOpenning_fire
		( )
		Clock S0_entering : clock -> evt_S0_entering
		( "System->S0" )
		Clock initState_entering : clock -> evt_initState_entering
		( "System->initState" )
		Clock initState0_entering : clock -> evt_initState0_entering
		( "System->initState0" )
		Clock Up_entering : clock -> evt_Up_entering
		( "System->Up" )
		Clock S2_entering : clock -> evt_S2_entering
		( "System->S2" )
		Clock Closing_entering : clock -> evt_Closing_entering
		( "System->Closing" )
		Clock S1_entering : clock -> evt_S1_entering
		( "System->S1" )
		Clock Down_entering : clock -> evt_Down_entering
		( "System->Down" )
		Clock Opening_entering : clock -> evt_Opening_entering
		( "System->Opening" )
		Clock S0_leaving : clock -> evt_S0_leaving
		( "System->S0" )
		Clock initState_leaving : clock -> evt_initState_leaving
		( "System->initState" )
		Clock initState0_leaving : clock -> evt_initState0_leaving
		( "System->initState0" )
		Clock Up_leaving : clock -> evt_Up_leaving
		( "System->Up" )
		Clock S2_leaving : clock -> evt_S2_leaving
		( "System->S2" )
		Clock Closing_leaving : clock -> evt_Closing_leaving
		( "System->Closing" )
		Clock S1_leaving : clock -> evt_S1_leaving
		( "System->S1" )
		Clock Down_leaving : clock -> evt_Down_leaving
		( "System->Down" )
		Clock Opening_leaving : clock -> evt_Opening_leaving
		( "System->Opening" )
		Clock RailRoadControl_start : clock -> evt_RailRoadControl_start
		( "System->RailRoadControl" )
		Clock TrainArrivingDeparting_start : clock -> evt_TrainArrivingDeparting_start
		( "System->TrainArrivingDeparting" )
		Clock RailRoadControl_stall : clock -> evt_RailRoadControl_stall
		( )
		Clock TrainArrivingDeparting_stall : clock -> evt_TrainArrivingDeparting_stall
		( )
		Integer S1_to_S2guardTemporal1_afterDuration : int = 25
		Integer S0_to_S1guardTemp0_afterDuration : int = 5
	}
}