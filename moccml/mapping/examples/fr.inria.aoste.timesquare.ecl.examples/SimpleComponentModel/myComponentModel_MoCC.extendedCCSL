ClockConstraintSystem c1 {
	imports {
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib" as kernel ;
		import "platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib" as CCSL ;
		import
		"platform:/resource/fr.inria.aoste.timesquare.ecl.examples/SimpleComponentModel/myComponentModel.simplecomponent" as
		Component ;
	}
	entryBlock mainBlock
	Block mainBlock {
		Expression c1bintermediate_allStart1 = Union
		( Clock1 -> c1b_behav_start,
		Clock2 -> c1b_behav_start )
		Expression c1bintermediate_allStop1 = Union
		( Clock1 -> c1b_behav_finish,
		Clock2 -> c1b_behav_finish )
		Expression c1aintermediate_allStart1 = Union
		( Clock1 -> c1a_behav1_start,
		Clock2 -> c1a_behav2_start )
		Expression c1aintermediate_allStart3 = Union
		( Clock1 -> c1aintermediate_allStart1,
		Clock2 -> c1a_behav3_start )
		Expression c1aintermediate_allStart4 = Union
		( Clock1 -> c1aintermediate_allStart3,
		Clock2 -> c1a_behav4_start )
		Expression c1aintermediate_allStop1 = Union
		( Clock1 -> c1a_behav1_finish,
		Clock2 -> c1a_behav2_finish )
		Expression c1aintermediate_allStop3 = Union
		( Clock1 -> c1aintermediate_allStop1,
		Clock2 -> c1a_behav3_finish )
		Expression c1aintermediate_allStop4 = Union
		( Clock1 -> c1aintermediate_allStop3,
		Clock2 -> c1a_behav4_finish )
		Relation c1a_behav3Precedes_startPrecedesStop [ Precedes ]
		( LeftClock -> c1a_behav3_start,
		RightClock -> c1a_behav3_finish )
		Relation c1b_behavPrecedes_startPrecedesStop [ Precedes ]
		( LeftClock -> c1b_behav_start,
		RightClock -> c1b_behav_finish )
		Relation c1a_behav1Precedes_startPrecedesStop [ Precedes ]
		( LeftClock -> c1a_behav1_start,
		RightClock -> c1a_behav1_finish )
		Relation c1a_behav4Precedes_startPrecedesStop [ Precedes ]
		( LeftClock -> c1a_behav4_start,
		RightClock -> c1a_behav4_finish )
		Relation c1a_behav2Precedes_startPrecedesStop [ Precedes ]
		( LeftClock -> c1a_behav2_start,
		RightClock -> c1a_behav2_finish )
		Relation c1aintermediate_notSimultaneousStarts1_2 [ Exclusion ]
		( Clock2 -> c1a_behav1_start,
		Clock1 -> c1a_behav2_start )
		Relation c1aintermediate_notSimultaneousStarts1_3 [ Exclusion ]
		( Clock2 -> c1a_behav1_start,
		Clock1 -> c1a_behav3_start )
		Relation c1aintermediate_notSimultaneousStarts1_4 [ Exclusion ]
		( Clock2 -> c1a_behav1_start,
		Clock1 -> c1a_behav4_start )
		Relation c1aintermediate_notSimultaneousStarts2_3 [ Exclusion ]
		( Clock2 -> c1a_behav2_start,
		Clock1 -> c1a_behav3_start )
		Relation c1aintermediate_notSimultaneousStarts2_4 [ Exclusion ]
		( Clock2 -> c1a_behav2_start,
		Clock1 -> c1a_behav4_start )
		Relation c1aintermediate_notSimultaneousStarts3_4 [ Exclusion ]
		( Clock2 -> c1a_behav3_start,
		Clock1 -> c1a_behav4_start )
		Relation c1bAlternates_noMultipleCallOfInternalBehavior [ Alternates ]
		( AlternatesLeftClock -> c1bintermediate_allStart1,
		AlternatesRightClock -> c1bintermediate_allStop1 )
		Relation c1aAlternates_noMultipleCallOfInternalBehavior [ Alternates ]
		( AlternatesLeftClock -> c1aintermediate_allStart4,
		AlternatesRightClock -> c1aintermediate_allStop4 )
		Clock c1a_behav3_start : clock -> evt_c1a_behav3_start
		( "Component->c1a_behav3" )
		: start
		Clock c1b_behav_start : clock -> evt_c1b_behav_start
		( "Component->c1b_behav" )
		: start
		Clock c1a_behav1_start : clock -> evt_c1a_behav1_start
		( "Component->c1a_behav1" )
		: start
		Clock c1a_behav4_start : clock -> evt_c1a_behav4_start
		( "Component->c1a_behav4" )
		: start
		Clock c1a_behav2_start : clock -> evt_c1a_behav2_start
		( "Component->c1a_behav2" )
		: start
		Clock c1a_behav3_finish : clock -> evt_c1a_behav3_finish
		( "Component->c1a_behav3" )
		: finish
		Clock c1b_behav_finish : clock -> evt_c1b_behav_finish
		( "Component->c1b_behav" )
		: finish
		Clock c1a_behav1_finish : clock -> evt_c1a_behav1_finish
		( "Component->c1a_behav1" )
		: finish
		Clock c1a_behav4_finish : clock -> evt_c1a_behav4_finish
		( "Component->c1a_behav4" )
		: finish
		Clock c1a_behav2_finish : clock -> evt_c1a_behav2_finish
		( "Component->c1a_behav2" )
		: finish
	}
}