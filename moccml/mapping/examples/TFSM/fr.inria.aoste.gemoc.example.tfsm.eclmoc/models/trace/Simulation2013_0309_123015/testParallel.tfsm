<?xml version="1.0" encoding="UTF-8"?>
<fr.inria.aoste.gemoc.example:System xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fr.inria.aoste.gemoc.example="http://fr.inria.aoste.gemoc.example.tfsm">
  <tfsms name="robotSide" initialState="//@tfsms.0/@ownedState.0">
    <ownedState name="initState">
      <outgoingTransition name="initToNormalSampling" target="//@tfsms.0/@ownedState.2">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:EventGuard" name="normalStart" triggeringEvent="//@globalEvent.0"/>
      </outgoingTransition>
    </ownedState>
    <ownedState name="safeSampling" incomingTransition="//@tfsms.0/@ownedState.1/@outgoingTransition.0 //@tfsms.0/@ownedState.2/@outgoingTransition.1">
      <outgoingTransition name="SafeSelfLoop" target="//@tfsms.0/@ownedState.1" generatedEvents="//@tfsms.0/@ownedEvents.2">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:TemporalGuard" name="safeGuard" onClock="//@tfsms.0/@ownedClock" afterDuration="7"/>
      </outgoingTransition>
      <outgoingTransition name="safeToNormal" target="//@tfsms.0/@ownedState.2">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:EventGuard" name="waitNoStress" triggeringEvent="//@tfsms.0/@ownedEvents.1"/>
      </outgoingTransition>
    </ownedState>
    <ownedState name="normalSampling" incomingTransition="//@tfsms.0/@ownedState.0/@outgoingTransition.0 //@tfsms.0/@ownedState.2/@outgoingTransition.0 //@tfsms.0/@ownedState.1/@outgoingTransition.1">
      <outgoingTransition name="NormalSelfLoop" target="//@tfsms.0/@ownedState.2" generatedEvents="//@tfsms.0/@ownedEvents.2">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:TemporalGuard" name="normalGuard" onClock="//@tfsms.0/@ownedClock" afterDuration="15"/>
      </outgoingTransition>
      <outgoingTransition name="normalToSafe" target="//@tfsms.0/@ownedState.1">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:EventGuard" name="waitAlarm" triggeringEvent="//@tfsms.0/@ownedEvents.0"/>
      </outgoingTransition>
    </ownedState>
    <ownedEvents name="goToSafeSampling"/>
    <ownedEvents name="goToNormalSampling"/>
    <ownedEvents name="doSampling" sollicitingTransitions="//@tfsms.0/@ownedState.2/@outgoingTransition.0 //@tfsms.0/@ownedState.1/@outgoingTransition.0"/>
    <ownedClock name="referencedClock"/>
  </tfsms>
  <tfsms name="sensorSide" initialState="//@tfsms.1/@ownedState.0">
    <ownedState name="initStateSensor">
      <outgoingTransition name="initToSenseLoop" target="//@tfsms.1/@ownedState.1">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:EventGuard" name="normalStart" triggeringEvent="//@globalEvent.0"/>
      </outgoingTransition>
    </ownedState>
    <ownedState name="SampleAndDetect" incomingTransition="//@tfsms.1/@ownedState.0/@outgoingTransition.0 //@tfsms.1/@ownedState.1/@outgoingTransition.0 //@tfsms.1/@ownedState.1/@outgoingTransition.1">
      <outgoingTransition name="SenseLoop" target="//@tfsms.1/@ownedState.1" generatedEvents="//@tfsms.1/@ownedEvents.0">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:TemporalGuard" name="normalGuard" onClock="//@tfsms.1/@ownedClock" afterDuration="15"/>
      </outgoingTransition>
      <outgoingTransition name="obstacleDetected" target="//@tfsms.1/@ownedState.1" generatedEvents="//@globalEvent.0">
        <ownedGuard xsi:type="fr.inria.aoste.gemoc.example:EventGuard" name="waitAlarm" triggeringEvent="//@globalEvent.0"/>
      </outgoingTransition>
    </ownedState>
    <ownedEvents name="Sample" sollicitingTransitions="//@tfsms.1/@ownedState.1/@outgoingTransition.0"/>
    <ownedClock name="referencedClockSampling"/>
  </tfsms>
  <globalEvent name="startControl" sollicitingTransitions="//@tfsms.1/@ownedState.1/@outgoingTransition.1"/>
</fr.inria.aoste.gemoc.example:System>
