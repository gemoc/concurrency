/*
* generated by Xtext
*/
grammar InternalGEL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.gemoc.gel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.gemoc.gel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.gemoc.gel.services.GELGrammarAccess;

}

@parser::members {
 
 	private GELGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GELGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainSpecificEventsSpecification
entryRuleDomainSpecificEventsSpecification 
:
{ before(grammarAccess.getDomainSpecificEventsSpecificationRule()); }
	 ruleDomainSpecificEventsSpecification
{ after(grammarAccess.getDomainSpecificEventsSpecificationRule()); } 
	 EOF 
;

// Rule DomainSpecificEventsSpecification
ruleDomainSpecificEventsSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventsSpecificationAccess().getGroup()); }
(rule__DomainSpecificEventsSpecification__Group__0)
{ after(grammarAccess.getDomainSpecificEventsSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportStatement
entryRuleImportStatement 
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportStatementAccess().getGroup()); }
(rule__ImportStatement__Group__0)
{ after(grammarAccess.getImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainSpecificEvent
entryRuleDomainSpecificEvent 
:
{ before(grammarAccess.getDomainSpecificEventRule()); }
	 ruleDomainSpecificEvent
{ after(grammarAccess.getDomainSpecificEventRule()); } 
	 EOF 
;

// Rule DomainSpecificEvent
ruleDomainSpecificEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventAccess().getAlternatives()); }
(rule__DomainSpecificEvent__Alternatives)
{ after(grammarAccess.getDomainSpecificEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicDomainSpecificEvent
entryRuleAtomicDomainSpecificEvent 
:
{ before(grammarAccess.getAtomicDomainSpecificEventRule()); }
	 ruleAtomicDomainSpecificEvent
{ after(grammarAccess.getAtomicDomainSpecificEventRule()); } 
	 EOF 
;

// Rule AtomicDomainSpecificEvent
ruleAtomicDomainSpecificEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup()); }
(rule__AtomicDomainSpecificEvent__Group__0)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompositeDomainSpecificEvent
entryRuleCompositeDomainSpecificEvent 
:
{ before(grammarAccess.getCompositeDomainSpecificEventRule()); }
	 ruleCompositeDomainSpecificEvent
{ after(grammarAccess.getCompositeDomainSpecificEventRule()); } 
	 EOF 
;

// Rule CompositeDomainSpecificEvent
ruleCompositeDomainSpecificEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getGroup()); }
(rule__CompositeDomainSpecificEvent__Group__0)
{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnfoldingStrategy
entryRuleUnfoldingStrategy 
:
{ before(grammarAccess.getUnfoldingStrategyRule()); }
	 ruleUnfoldingStrategy
{ after(grammarAccess.getUnfoldingStrategyRule()); } 
	 EOF 
;

// Rule UnfoldingStrategy
ruleUnfoldingStrategy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getGroup()); }
(rule__UnfoldingStrategy__Group__0)
{ after(grammarAccess.getUnfoldingStrategyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariable
entryRuleLocalVariable 
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
(rule__LocalVariable__Group__0)
{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstantiationPredicate
entryRuleInstantiationPredicate 
:
{ before(grammarAccess.getInstantiationPredicateRule()); }
	 ruleInstantiationPredicate
{ after(grammarAccess.getInstantiationPredicateRule()); } 
	 EOF 
;

// Rule InstantiationPredicate
ruleInstantiationPredicate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstantiationPredicateAccess().getGroup()); }
(rule__InstantiationPredicate__Group__0)
{ after(grammarAccess.getInstantiationPredicateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainSpecificEventsPattern
entryRuleDomainSpecificEventsPattern 
:
{ before(grammarAccess.getDomainSpecificEventsPatternRule()); }
	 ruleDomainSpecificEventsPattern
{ after(grammarAccess.getDomainSpecificEventsPatternRule()); } 
	 EOF 
;

// Rule DomainSpecificEventsPattern
ruleDomainSpecificEventsPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventsPatternAccess().getLogicalSequenceParserRuleCall()); }
	ruleLogicalSequence
{ after(grammarAccess.getDomainSpecificEventsPatternAccess().getLogicalSequenceParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalSequence
entryRuleLogicalSequence 
:
{ before(grammarAccess.getLogicalSequenceRule()); }
	 ruleLogicalSequence
{ after(grammarAccess.getLogicalSequenceRule()); } 
	 EOF 
;

// Rule LogicalSequence
ruleLogicalSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalSequenceAccess().getGroup()); }
(rule__LogicalSequence__Group__0)
{ after(grammarAccess.getLogicalSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCoincidencePattern
entryRuleCoincidencePattern 
:
{ before(grammarAccess.getCoincidencePatternRule()); }
	 ruleCoincidencePattern
{ after(grammarAccess.getCoincidencePatternRule()); } 
	 EOF 
;

// Rule CoincidencePattern
ruleCoincidencePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCoincidencePatternAccess().getGroup()); }
(rule__CoincidencePattern__Group__0)
{ after(grammarAccess.getCoincidencePatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrPattern
entryRuleOrPattern 
:
{ before(grammarAccess.getOrPatternRule()); }
	 ruleOrPattern
{ after(grammarAccess.getOrPatternRule()); } 
	 EOF 
;

// Rule OrPattern
ruleOrPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrPatternAccess().getGroup()); }
(rule__OrPattern__Group__0)
{ after(grammarAccess.getOrPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleXorPattern
entryRuleXorPattern 
:
{ before(grammarAccess.getXorPatternRule()); }
	 ruleXorPattern
{ after(grammarAccess.getXorPatternRule()); } 
	 EOF 
;

// Rule XorPattern
ruleXorPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getXorPatternAccess().getGroup()); }
(rule__XorPattern__Group__0)
{ after(grammarAccess.getXorPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusPattern
entryRulePlusPattern 
:
{ before(grammarAccess.getPlusPatternRule()); }
	 rulePlusPattern
{ after(grammarAccess.getPlusPatternRule()); } 
	 EOF 
;

// Rule PlusPattern
rulePlusPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlusPatternAccess().getGroup()); }
(rule__PlusPattern__Group__0)
{ after(grammarAccess.getPlusPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterationPattern
entryRuleIterationPattern 
:
{ before(grammarAccess.getIterationPatternRule()); }
	 ruleIterationPattern
{ after(grammarAccess.getIterationPatternRule()); } 
	 EOF 
;

// Rule IterationPattern
ruleIterationPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterationPatternAccess().getGroup()); }
(rule__IterationPattern__Group__0)
{ after(grammarAccess.getIterationPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainSpecificEventReferenceOrPattern
entryRuleDomainSpecificEventReferenceOrPattern 
:
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternRule()); }
	 ruleDomainSpecificEventReferenceOrPattern
{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternRule()); } 
	 EOF 
;

// Rule DomainSpecificEventReferenceOrPattern
ruleDomainSpecificEventReferenceOrPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getAlternatives()); }
(rule__DomainSpecificEventReferenceOrPattern__Alternatives)
{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainSpecificEventReferenceWithOrWithoutTarget
entryRuleDomainSpecificEventReferenceWithOrWithoutTarget 
:
{ before(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetRule()); }
	 ruleDomainSpecificEventReferenceWithOrWithoutTarget
{ after(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetRule()); } 
	 EOF 
;

// Rule DomainSpecificEventReferenceWithOrWithoutTarget
ruleDomainSpecificEventReferenceWithOrWithoutTarget
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetAccess().getAlternatives()); }
(rule__DomainSpecificEventReferenceWithOrWithoutTarget__Alternatives)
{ after(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainSpecificEventReference
entryRuleDomainSpecificEventReference 
:
{ before(grammarAccess.getDomainSpecificEventReferenceRule()); }
	 ruleDomainSpecificEventReference
{ after(grammarAccess.getDomainSpecificEventReferenceRule()); } 
	 EOF 
;

// Rule DomainSpecificEventReference
ruleDomainSpecificEventReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventReferenceAccess().getGroup()); }
(rule__DomainSpecificEventReference__Group__0)
{ after(grammarAccess.getDomainSpecificEventReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDomainSpecificEventReferenceWithArguments
entryRuleDomainSpecificEventReferenceWithArguments 
:
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsRule()); }
	 ruleDomainSpecificEventReferenceWithArguments
{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsRule()); } 
	 EOF 
;

// Rule DomainSpecificEventReferenceWithArguments
ruleDomainSpecificEventReferenceWithArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getGroup()); }
(rule__DomainSpecificEventReferenceWithArguments__Group__0)
{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListOfArguments
entryRuleListOfArguments 
:
{ before(grammarAccess.getListOfArgumentsRule()); }
	 ruleListOfArguments
{ after(grammarAccess.getListOfArgumentsRule()); } 
	 EOF 
;

// Rule ListOfArguments
ruleListOfArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListOfArgumentsAccess().getAlternatives()); }
(rule__ListOfArguments__Alternatives)
{ after(grammarAccess.getListOfArgumentsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleArgument
entryRuleSingleArgument 
:
{ before(grammarAccess.getSingleArgumentRule()); }
	 ruleSingleArgument
{ after(grammarAccess.getSingleArgumentRule()); } 
	 EOF 
;

// Rule SingleArgument
ruleSingleArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleArgumentAccess().getGroup()); }
(rule__SingleArgument__Group__0)
{ after(grammarAccess.getSingleArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultipleArguments
entryRuleMultipleArguments 
:
{ before(grammarAccess.getMultipleArgumentsRule()); }
	 ruleMultipleArguments
{ after(grammarAccess.getMultipleArgumentsRule()); } 
	 EOF 
;

// Rule MultipleArguments
ruleMultipleArguments
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getGroup()); }
(rule__MultipleArguments__Group__0)
{ after(grammarAccess.getMultipleArgumentsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedbackPolicy
entryRuleFeedbackPolicy 
:
{ before(grammarAccess.getFeedbackPolicyRule()); }
	 ruleFeedbackPolicy
{ after(grammarAccess.getFeedbackPolicyRule()); } 
	 EOF 
;

// Rule FeedbackPolicy
ruleFeedbackPolicy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackPolicyAccess().getGroup()); }
(rule__FeedbackPolicy__Group__0)
{ after(grammarAccess.getFeedbackPolicyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedbackRule
entryRuleFeedbackRule 
:
{ before(grammarAccess.getFeedbackRuleRule()); }
	 ruleFeedbackRule
{ after(grammarAccess.getFeedbackRuleRule()); } 
	 EOF 
;

// Rule FeedbackRule
ruleFeedbackRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackRuleAccess().getGroup()); }
(rule__FeedbackRule__Group__0)
{ after(grammarAccess.getFeedbackRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultFeedbackRule
entryRuleDefaultFeedbackRule 
:
{ before(grammarAccess.getDefaultFeedbackRuleRule()); }
	 ruleDefaultFeedbackRule
{ after(grammarAccess.getDefaultFeedbackRuleRule()); } 
	 EOF 
;

// Rule DefaultFeedbackRule
ruleDefaultFeedbackRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultFeedbackRuleAccess().getGroup()); }
(rule__DefaultFeedbackRule__Group__0)
{ after(grammarAccess.getDefaultFeedbackRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedbackFilter
entryRuleFeedbackFilter 
:
{ before(grammarAccess.getFeedbackFilterRule()); }
	 ruleFeedbackFilter
{ after(grammarAccess.getFeedbackFilterRule()); } 
	 EOF 
;

// Rule FeedbackFilter
ruleFeedbackFilter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackFilterAccess().getGroup()); }
(rule__FeedbackFilter__Group__0)
{ after(grammarAccess.getFeedbackFilterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeedbackConsequence
entryRuleFeedbackConsequence 
:
{ before(grammarAccess.getFeedbackConsequenceRule()); }
	 ruleFeedbackConsequence
{ after(grammarAccess.getFeedbackConsequenceRule()); } 
	 EOF 
;

// Rule FeedbackConsequence
ruleFeedbackConsequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeedbackConsequenceAccess().getGroup()); }
(rule__FeedbackConsequence__Group__0)
{ after(grammarAccess.getFeedbackConsequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMoccEvent
entryRuleMoccEvent 
:
{ before(grammarAccess.getMoccEventRule()); }
	 ruleMoccEvent
{ after(grammarAccess.getMoccEventRule()); } 
	 EOF 
;

// Rule MoccEvent
ruleMoccEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMoccEventAccess().getEclEventParserRuleCall()); }
	ruleEclEvent
{ after(grammarAccess.getMoccEventAccess().getEclEventParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEclEvent
entryRuleEclEvent 
:
{ before(grammarAccess.getEclEventRule()); }
	 ruleEclEvent
{ after(grammarAccess.getEclEventRule()); } 
	 EOF 
;

// Rule EclEvent
ruleEclEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEclEventAccess().getGroup()); }
(rule__EclEvent__Group__0)
{ after(grammarAccess.getEclEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecutionFunction
entryRuleExecutionFunction 
:
{ before(grammarAccess.getExecutionFunctionRule()); }
	 ruleExecutionFunction
{ after(grammarAccess.getExecutionFunctionRule()); } 
	 EOF 
;

// Rule ExecutionFunction
ruleExecutionFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecutionFunctionAccess().getKermeta3ExecutionFunctionParserRuleCall()); }
	ruleKermeta3ExecutionFunction
{ after(grammarAccess.getExecutionFunctionAccess().getKermeta3ExecutionFunctionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKermeta3ExecutionFunction
entryRuleKermeta3ExecutionFunction 
:
{ before(grammarAccess.getKermeta3ExecutionFunctionRule()); }
	 ruleKermeta3ExecutionFunction
{ after(grammarAccess.getKermeta3ExecutionFunctionRule()); } 
	 EOF 
;

// Rule Kermeta3ExecutionFunction
ruleKermeta3ExecutionFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getGroup()); }
(rule__Kermeta3ExecutionFunction__Group__0)
{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecutionFunctionResult
entryRuleExecutionFunctionResult 
:
{ before(grammarAccess.getExecutionFunctionResultRule()); }
	 ruleExecutionFunctionResult
{ after(grammarAccess.getExecutionFunctionResultRule()); } 
	 EOF 
;

// Rule ExecutionFunctionResult
ruleExecutionFunctionResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecutionFunctionResultAccess().getGroup()); }
(rule__ExecutionFunctionResult__Group__0)
{ after(grammarAccess.getExecutionFunctionResultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleGImportStatement
entryRuleGImportStatement 
:
{ before(grammarAccess.getGImportStatementRule()); }
	 ruleGImportStatement
{ after(grammarAccess.getGImportStatementRule()); } 
	 EOF 
;

// Rule GImportStatement
ruleGImportStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGImportStatementAccess().getGroup()); }
(rule__GImportStatement__Group__0)
{ after(grammarAccess.getGImportStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGExpression
entryRuleGExpression 
:
{ before(grammarAccess.getGExpressionRule()); }
	 ruleGExpression
{ after(grammarAccess.getGExpressionRule()); } 
	 EOF 
;

// Rule GExpression
ruleGExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGExpressionAccess().getGOrExpressionParserRuleCall()); }
	ruleGOrExpression
{ after(grammarAccess.getGExpressionAccess().getGOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGOrExpression
entryRuleGOrExpression 
:
{ before(grammarAccess.getGOrExpressionRule()); }
	 ruleGOrExpression
{ after(grammarAccess.getGOrExpressionRule()); } 
	 EOF 
;

// Rule GOrExpression
ruleGOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGOrExpressionAccess().getGroup()); }
(rule__GOrExpression__Group__0)
{ after(grammarAccess.getGOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGXorExpression
entryRuleGXorExpression 
:
{ before(grammarAccess.getGXorExpressionRule()); }
	 ruleGXorExpression
{ after(grammarAccess.getGXorExpressionRule()); } 
	 EOF 
;

// Rule GXorExpression
ruleGXorExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGXorExpressionAccess().getGroup()); }
(rule__GXorExpression__Group__0)
{ after(grammarAccess.getGXorExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGAndExpression
entryRuleGAndExpression 
:
{ before(grammarAccess.getGAndExpressionRule()); }
	 ruleGAndExpression
{ after(grammarAccess.getGAndExpressionRule()); } 
	 EOF 
;

// Rule GAndExpression
ruleGAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGAndExpressionAccess().getGroup()); }
(rule__GAndExpression__Group__0)
{ after(grammarAccess.getGAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGEqualityExpression
entryRuleGEqualityExpression 
:
{ before(grammarAccess.getGEqualityExpressionRule()); }
	 ruleGEqualityExpression
{ after(grammarAccess.getGEqualityExpressionRule()); } 
	 EOF 
;

// Rule GEqualityExpression
ruleGEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGroup()); }
(rule__GEqualityExpression__Group__0)
{ after(grammarAccess.getGEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGRelationExpression
entryRuleGRelationExpression 
:
{ before(grammarAccess.getGRelationExpressionRule()); }
	 ruleGRelationExpression
{ after(grammarAccess.getGRelationExpressionRule()); } 
	 EOF 
;

// Rule GRelationExpression
ruleGRelationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGroup()); }
(rule__GRelationExpression__Group__0)
{ after(grammarAccess.getGRelationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGAdditionExpression
entryRuleGAdditionExpression 
:
{ before(grammarAccess.getGAdditionExpressionRule()); }
	 ruleGAdditionExpression
{ after(grammarAccess.getGAdditionExpressionRule()); } 
	 EOF 
;

// Rule GAdditionExpression
ruleGAdditionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGroup()); }
(rule__GAdditionExpression__Group__0)
{ after(grammarAccess.getGAdditionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGMultiplicationExpression
entryRuleGMultiplicationExpression 
:
{ before(grammarAccess.getGMultiplicationExpressionRule()); }
	 ruleGMultiplicationExpression
{ after(grammarAccess.getGMultiplicationExpressionRule()); } 
	 EOF 
;

// Rule GMultiplicationExpression
ruleGMultiplicationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGroup()); }
(rule__GMultiplicationExpression__Group__0)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGNegationExpression
entryRuleGNegationExpression 
:
{ before(grammarAccess.getGNegationExpressionRule()); }
	 ruleGNegationExpression
{ after(grammarAccess.getGNegationExpressionRule()); } 
	 EOF 
;

// Rule GNegationExpression
ruleGNegationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGNegationExpressionAccess().getAlternatives()); }
(rule__GNegationExpression__Alternatives)
{ after(grammarAccess.getGNegationExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGNavigationExpression
entryRuleGNavigationExpression 
:
{ before(grammarAccess.getGNavigationExpressionRule()); }
	 ruleGNavigationExpression
{ after(grammarAccess.getGNavigationExpressionRule()); } 
	 EOF 
;

// Rule GNavigationExpression
ruleGNavigationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGroup()); }
(rule__GNavigationExpression__Group__0)
{ after(grammarAccess.getGNavigationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGReferenceExpression
entryRuleGReferenceExpression 
:
{ before(grammarAccess.getGReferenceExpressionRule()); }
	 ruleGReferenceExpression
{ after(grammarAccess.getGReferenceExpressionRule()); } 
	 EOF 
;

// Rule GReferenceExpression
ruleGReferenceExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getAlternatives()); }
(rule__GReferenceExpression__Alternatives)
{ after(grammarAccess.getGReferenceExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGPrimaryExpression
entryRuleGPrimaryExpression 
:
{ before(grammarAccess.getGPrimaryExpressionRule()); }
	 ruleGPrimaryExpression
{ after(grammarAccess.getGPrimaryExpressionRule()); } 
	 EOF 
;

// Rule GPrimaryExpression
ruleGPrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGPrimaryExpressionAccess().getAlternatives()); }
(rule__GPrimaryExpression__Alternatives)
{ after(grammarAccess.getGPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGStringExpression
entryRuleGStringExpression 
:
{ before(grammarAccess.getGStringExpressionRule()); }
	 ruleGStringExpression
{ after(grammarAccess.getGStringExpressionRule()); } 
	 EOF 
;

// Rule GStringExpression
ruleGStringExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGStringExpressionAccess().getGroup()); }
(rule__GStringExpression__Group__0)
{ after(grammarAccess.getGStringExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGBooleanExpression
entryRuleGBooleanExpression 
:
{ before(grammarAccess.getGBooleanExpressionRule()); }
	 ruleGBooleanExpression
{ after(grammarAccess.getGBooleanExpressionRule()); } 
	 EOF 
;

// Rule GBooleanExpression
ruleGBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getGroup()); }
(rule__GBooleanExpression__Group__0)
{ after(grammarAccess.getGBooleanExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGNumericExpression
entryRuleGNumericExpression 
:
{ before(grammarAccess.getGNumericExpressionRule()); }
	 ruleGNumericExpression
{ after(grammarAccess.getGNumericExpressionRule()); } 
	 EOF 
;

// Rule GNumericExpression
ruleGNumericExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGNumericExpressionAccess().getAlternatives()); }
(rule__GNumericExpression__Alternatives)
{ after(grammarAccess.getGNumericExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGIntegerExpression
entryRuleGIntegerExpression 
:
{ before(grammarAccess.getGIntegerExpressionRule()); }
	 ruleGIntegerExpression
{ after(grammarAccess.getGIntegerExpressionRule()); } 
	 EOF 
;

// Rule GIntegerExpression
ruleGIntegerExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getGroup()); }
(rule__GIntegerExpression__Group__0)
{ after(grammarAccess.getGIntegerExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGDoubleExpression
entryRuleGDoubleExpression 
:
{ before(grammarAccess.getGDoubleExpressionRule()); }
	 ruleGDoubleExpression
{ after(grammarAccess.getGDoubleExpressionRule()); } 
	 EOF 
;

// Rule GDoubleExpression
ruleGDoubleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getGroup()); }
(rule__GDoubleExpression__Group__0)
{ after(grammarAccess.getGDoubleExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGEnumLiteralExpression
entryRuleGEnumLiteralExpression 
:
{ before(grammarAccess.getGEnumLiteralExpressionRule()); }
	 ruleGEnumLiteralExpression
{ after(grammarAccess.getGEnumLiteralExpressionRule()); } 
	 EOF 
;

// Rule GEnumLiteralExpression
ruleGEnumLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getGroup()); }
(rule__GEnumLiteralExpression__Group__0)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGIfExpression
entryRuleGIfExpression 
:
{ before(grammarAccess.getGIfExpressionRule()); }
	 ruleGIfExpression
{ after(grammarAccess.getGIfExpressionRule()); } 
	 EOF 
;

// Rule GIfExpression
ruleGIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGIfExpressionAccess().getGroup()); }
(rule__GIfExpression__Group__0)
{ after(grammarAccess.getGIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGBraceExpression
entryRuleGBraceExpression 
:
{ before(grammarAccess.getGBraceExpressionRule()); }
	 ruleGBraceExpression
{ after(grammarAccess.getGBraceExpressionRule()); } 
	 EOF 
;

// Rule GBraceExpression
ruleGBraceExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGBraceExpressionAccess().getGroup()); }
(rule__GBraceExpression__Group__0)
{ after(grammarAccess.getGBraceExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNavigationOperator
entryRuleNavigationOperator 
:
{ before(grammarAccess.getNavigationOperatorRule()); }
	 ruleNavigationOperator
{ after(grammarAccess.getNavigationOperatorRule()); } 
	 EOF 
;

// Rule NavigationOperator
ruleNavigationOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNavigationOperatorAccess().getAlternatives()); }
(rule__NavigationOperator__Alternatives)
{ after(grammarAccess.getNavigationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ExecutionKind
ruleExecutionKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionKindAccess().getAlternatives()); }
(rule__ExecutionKind__Alternatives)
{ after(grammarAccess.getExecutionKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CallKind
ruleCallKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallKindAccess().getAlternatives()); }
(rule__CallKind__Alternatives)
{ after(grammarAccess.getCallKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GAndOperator
ruleGAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndOperatorAccess().getANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getGAndOperatorAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GXorOperator
ruleGXorOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorOperatorAccess().getXOREnumLiteralDeclaration()); }
(	'xor' 
)
{ after(grammarAccess.getGXorOperatorAccess().getXOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GOrOperator
ruleGOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrOperatorAccess().getOREnumLiteralDeclaration()); }
(	'or' 
)
{ after(grammarAccess.getGOrOperatorAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GEqualityOperator
ruleGEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityOperatorAccess().getAlternatives()); }
(rule__GEqualityOperator__Alternatives)
{ after(grammarAccess.getGEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GRelationOperator
ruleGRelationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationOperatorAccess().getAlternatives()); }
(rule__GRelationOperator__Alternatives)
{ after(grammarAccess.getGRelationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GAdditionOperator
ruleGAdditionOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionOperatorAccess().getAlternatives()); }
(rule__GAdditionOperator__Alternatives)
{ after(grammarAccess.getGAdditionOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GMultiplicationOperator
ruleGMultiplicationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationOperatorAccess().getAlternatives()); }
(rule__GMultiplicationOperator__Alternatives)
{ after(grammarAccess.getGMultiplicationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule GNegationOperator
ruleGNegationOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationOperatorAccess().getAlternatives()); }
(rule__GNegationOperator__Alternatives)
{ after(grammarAccess.getGNegationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DomainSpecificEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventAccess().getAtomicDomainSpecificEventParserRuleCall_0()); }
	ruleAtomicDomainSpecificEvent
{ after(grammarAccess.getDomainSpecificEventAccess().getAtomicDomainSpecificEventParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDomainSpecificEventAccess().getCompositeDomainSpecificEventParserRuleCall_1()); }
	ruleCompositeDomainSpecificEvent
{ after(grammarAccess.getDomainSpecificEventAccess().getCompositeDomainSpecificEventParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceOrPattern__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getDomainSpecificEventReferenceWithOrWithoutTargetParserRuleCall_0()); }
	ruleDomainSpecificEventReferenceWithOrWithoutTarget
{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getDomainSpecificEventReferenceWithOrWithoutTargetParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getGroup_1()); }
(rule__DomainSpecificEventReferenceOrPattern__Group_1__0)
{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithOrWithoutTarget__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetAccess().getDomainSpecificEventReferenceParserRuleCall_0()); }
	ruleDomainSpecificEventReference
{ after(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetAccess().getDomainSpecificEventReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetAccess().getDomainSpecificEventReferenceWithArgumentsParserRuleCall_1()); }
	ruleDomainSpecificEventReferenceWithArguments
{ after(grammarAccess.getDomainSpecificEventReferenceWithOrWithoutTargetAccess().getDomainSpecificEventReferenceWithArgumentsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListOfArguments__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListOfArgumentsAccess().getSingleArgumentParserRuleCall_0()); }
	ruleSingleArgument
{ after(grammarAccess.getListOfArgumentsAccess().getSingleArgumentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getListOfArgumentsAccess().getMultipleArgumentsParserRuleCall_1()); }
	ruleMultipleArguments
{ after(grammarAccess.getListOfArgumentsAccess().getMultipleArgumentsParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getGNavigationExpressionParserRuleCall_0()); }
	ruleGNavigationExpression
{ after(grammarAccess.getGNegationExpressionAccess().getGNavigationExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGNegationExpressionAccess().getGroup_1()); }
(rule__GNegationExpression__Group_1__0)
{ after(grammarAccess.getGNegationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getGPrimaryExpressionParserRuleCall_0()); }
	ruleGPrimaryExpression
{ after(grammarAccess.getGReferenceExpressionAccess().getGPrimaryExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGReferenceExpressionAccess().getGroup_1()); }
(rule__GReferenceExpression__Group_1__0)
{ after(grammarAccess.getGReferenceExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GPrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGStringExpressionParserRuleCall_0()); }
	ruleGStringExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGStringExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGBooleanExpressionParserRuleCall_1()); }
	ruleGBooleanExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGBooleanExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGNumericExpressionParserRuleCall_2()); }
	ruleGNumericExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGNumericExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGEnumLiteralExpressionParserRuleCall_3()); }
	ruleGEnumLiteralExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGEnumLiteralExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGIfExpressionParserRuleCall_4()); }
	ruleGIfExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGIfExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getGPrimaryExpressionAccess().getGBraceExpressionParserRuleCall_5()); }
	ruleGBraceExpression
{ after(grammarAccess.getGPrimaryExpressionAccess().getGBraceExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNumericExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNumericExpressionAccess().getGIntegerExpressionParserRuleCall_0()); }
	ruleGIntegerExpression
{ after(grammarAccess.getGNumericExpressionAccess().getGIntegerExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getGNumericExpressionAccess().getGDoubleExpressionParserRuleCall_1()); }
	ruleGDoubleExpression
{ after(grammarAccess.getGNumericExpressionAccess().getGDoubleExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NavigationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNavigationOperatorAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getNavigationOperatorAccess().getFullStopKeyword_0()); }
)

    |(
{ before(grammarAccess.getNavigationOperatorAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getNavigationOperatorAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
(	'public' 
)
{ after(grammarAccess.getVisibilityAccess().getPublicEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
(	'private' 
)
{ after(grammarAccess.getVisibilityAccess().getPrivateEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionKindAccess().getSubmissionEnumLiteralDeclaration_0()); }
(	'triggers' 
)
{ after(grammarAccess.getExecutionKindAccess().getSubmissionEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getExecutionKindAccess().getInterruptionEnumLiteralDeclaration_1()); }
(	'interrupts' 
)
{ after(grammarAccess.getExecutionKindAccess().getInterruptionEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallKindAccess().getBlockingEnumLiteralDeclaration_0()); }
(	'blocking' 
)
{ after(grammarAccess.getCallKindAccess().getBlockingEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCallKindAccess().getNonBlockingEnumLiteralDeclaration_1()); }
(	'nonblocking' 
)
{ after(grammarAccess.getCallKindAccess().getNonBlockingEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getGEqualityOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGEqualityOperatorAccess().getNOTEQUALEnumLiteralDeclaration_1()); }
(	'<>' 
)
{ after(grammarAccess.getGEqualityOperatorAccess().getNOTEQUALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getLESSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGRelationOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getGRelationOperatorAccess().getLESSEQUALEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getLESSEQUALEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getGRelationOperatorAccess().getGREATEREQUALEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getGRelationOperatorAccess().getGREATEREQUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionOperatorAccess().getADDITIONEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getGAdditionOperatorAccess().getADDITIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGAdditionOperatorAccess().getSUBTRACTIONEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getGAdditionOperatorAccess().getSUBTRACTIONEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationOperatorAccess().getMULTIPLICATIONEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getGMultiplicationOperatorAccess().getMULTIPLICATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGMultiplicationOperatorAccess().getDIVISIONEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getGMultiplicationOperatorAccess().getDIVISIONEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationOperatorAccess().getNEGATIONEnumLiteralDeclaration_0()); }
(	'not' 
)
{ after(grammarAccess.getGNegationOperatorAccess().getNEGATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getGNegationOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'~' 
)
{ after(grammarAccess.getGNegationOperatorAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__DomainSpecificEventsSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventsSpecification__Group__0__Impl
	rule__DomainSpecificEventsSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventsSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventsSpecificationAccess().getDomainSpecificEventsSpecificationAction_0()); }
(

)
{ after(grammarAccess.getDomainSpecificEventsSpecificationAccess().getDomainSpecificEventsSpecificationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventsSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventsSpecification__Group__1__Impl
	rule__DomainSpecificEventsSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventsSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventsSpecificationAccess().getImportsAssignment_1()); }
(rule__DomainSpecificEventsSpecification__ImportsAssignment_1)*
{ after(grammarAccess.getDomainSpecificEventsSpecificationAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventsSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventsSpecification__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventsSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventsSpecificationAccess().getEventsAssignment_2()); }
(rule__DomainSpecificEventsSpecification__EventsAssignment_2)*
{ after(grammarAccess.getDomainSpecificEventsSpecificationAccess().getEventsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportURIAssignment_1()); }
(rule__ImportStatement__ImportURIAssignment_1)
{ after(grammarAccess.getImportStatementAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicDomainSpecificEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__0__Impl
	rule__AtomicDomainSpecificEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getAtomicDomainSpecificEventAction_0()); }
(

)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getAtomicDomainSpecificEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__1__Impl
	rule__AtomicDomainSpecificEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getVisibilityAssignment_1()); }
(rule__AtomicDomainSpecificEvent__VisibilityAssignment_1)?
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getVisibilityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__2__Impl
	rule__AtomicDomainSpecificEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getDSEKeyword_2()); }

	'DSE' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getDSEKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__3__Impl
	rule__AtomicDomainSpecificEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getNameAssignment_3()); }
(rule__AtomicDomainSpecificEvent__NameAssignment_3)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__4__Impl
	rule__AtomicDomainSpecificEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__5__Impl
	rule__AtomicDomainSpecificEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getUponKeyword_5()); }

	'upon' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getUponKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__6__Impl
	rule__AtomicDomainSpecificEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getUponMoccEventAssignment_6()); }
(rule__AtomicDomainSpecificEvent__UponMoccEventAssignment_6)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getUponMoccEventAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__7__Impl
	rule__AtomicDomainSpecificEvent__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup_7()); }
(rule__AtomicDomainSpecificEvent__Group_7__0)?
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__8__Impl
	rule__AtomicDomainSpecificEvent__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup_8()); }
(rule__AtomicDomainSpecificEvent__Group_8__0)?
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getEndKeyword_9()); }

	'end' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getEndKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__AtomicDomainSpecificEvent__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7__0__Impl
	rule__AtomicDomainSpecificEvent__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionKindAssignment_7_0()); }
(rule__AtomicDomainSpecificEvent__ExecutionKindAssignment_7_0)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionKindAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7__1__Impl
	rule__AtomicDomainSpecificEvent__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionFunctionAssignment_7_1()); }
(rule__AtomicDomainSpecificEvent__ExecutionFunctionAssignment_7_1)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionFunctionAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup_7_2()); }
(rule__AtomicDomainSpecificEvent__Group_7_2__0)?
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicDomainSpecificEvent__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7_2__0__Impl
	rule__AtomicDomainSpecificEvent__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getFeedbackKeyword_7_2_0()); }

	'feedback' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getFeedbackKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7_2__1__Impl
	rule__AtomicDomainSpecificEvent__Group_7_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getColonKeyword_7_2_1()); }

	':' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getColonKeyword_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group_7_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7_2__2__Impl
	rule__AtomicDomainSpecificEvent__Group_7_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getFeedbackPolicyAssignment_7_2_2()); }
(rule__AtomicDomainSpecificEvent__FeedbackPolicyAssignment_7_2_2)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getFeedbackPolicyAssignment_7_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group_7_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_7_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_7_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getEndKeyword_7_2_3()); }

	'end' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getEndKeyword_7_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AtomicDomainSpecificEvent__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_8__0__Impl
	rule__AtomicDomainSpecificEvent__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getRaisesKeyword_8_0()); }

	'raises' 

{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getRaisesKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicDomainSpecificEvent__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicDomainSpecificEvent__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getRaisedMoccEventAssignment_8_1()); }
(rule__AtomicDomainSpecificEvent__RaisedMoccEventAssignment_8_1)
{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getRaisedMoccEventAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompositeDomainSpecificEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__0__Impl
	rule__CompositeDomainSpecificEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getCompositeDomainSpecificEventAction_0()); }
(

)
{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getCompositeDomainSpecificEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__1__Impl
	rule__CompositeDomainSpecificEvent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getVisibilityAssignment_1()); }
(rule__CompositeDomainSpecificEvent__VisibilityAssignment_1)?
{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getVisibilityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__2__Impl
	rule__CompositeDomainSpecificEvent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getCompositeKeyword_2()); }

	'Composite' 

{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getCompositeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__3__Impl
	rule__CompositeDomainSpecificEvent__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getNameAssignment_3()); }
(rule__CompositeDomainSpecificEvent__NameAssignment_3)
{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__4__Impl
	rule__CompositeDomainSpecificEvent__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__5__Impl
	rule__CompositeDomainSpecificEvent__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getUnfoldingStrategyAssignment_5()); }
(rule__CompositeDomainSpecificEvent__UnfoldingStrategyAssignment_5)?
{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getUnfoldingStrategyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__6__Impl
	rule__CompositeDomainSpecificEvent__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getBodyAssignment_6()); }
(rule__CompositeDomainSpecificEvent__BodyAssignment_6)
{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompositeDomainSpecificEvent__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompositeDomainSpecificEvent__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getEndKeyword_7()); }

	'end' 

{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getEndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__UnfoldingStrategy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__0__Impl
	rule__UnfoldingStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getUnfoldingStrategyAction_0()); }
(

)
{ after(grammarAccess.getUnfoldingStrategyAccess().getUnfoldingStrategyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__1__Impl
	rule__UnfoldingStrategy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getForallKeyword_1()); }

	'forall' 

{ after(grammarAccess.getUnfoldingStrategyAccess().getForallKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__2__Impl
	rule__UnfoldingStrategy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getUnfoldingStrategyAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__3__Impl
	rule__UnfoldingStrategy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getLocalVariablesAssignment_3()); }
(rule__UnfoldingStrategy__LocalVariablesAssignment_3)
{ after(grammarAccess.getUnfoldingStrategyAccess().getLocalVariablesAssignment_3()); }
)
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getLocalVariablesAssignment_3()); }
(rule__UnfoldingStrategy__LocalVariablesAssignment_3)*
{ after(grammarAccess.getUnfoldingStrategyAccess().getLocalVariablesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__4__Impl
	rule__UnfoldingStrategy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getUnfoldingStrategyAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__5__Impl
	rule__UnfoldingStrategy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getWhereKeyword_5()); }

	'where' 

{ after(grammarAccess.getUnfoldingStrategyAccess().getWhereKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__6__Impl
	rule__UnfoldingStrategy__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getUnfoldingStrategyAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__7__Impl
	rule__UnfoldingStrategy__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getInstantiationPredicatesAssignment_7()); }
(rule__UnfoldingStrategy__InstantiationPredicatesAssignment_7)
{ after(grammarAccess.getUnfoldingStrategyAccess().getInstantiationPredicatesAssignment_7()); }
)
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getInstantiationPredicatesAssignment_7()); }
(rule__UnfoldingStrategy__InstantiationPredicatesAssignment_7)*
{ after(grammarAccess.getUnfoldingStrategyAccess().getInstantiationPredicatesAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnfoldingStrategy__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnfoldingStrategy__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getUnfoldingStrategyAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__LocalVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getLocalVariableAction_0()); }
(

)
{ after(grammarAccess.getLocalVariableAccess().getLocalVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__1__Impl
	rule__LocalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getNameAssignment_1()); }
(rule__LocalVariable__NameAssignment_1)
{ after(grammarAccess.getLocalVariableAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__2__Impl
	rule__LocalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getLocalVariableAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getTypeAssignment_3()); }
(rule__LocalVariable__TypeAssignment_3)
{ after(grammarAccess.getLocalVariableAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__InstantiationPredicate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantiationPredicate__Group__0__Impl
	rule__InstantiationPredicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationPredicate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationPredicateAccess().getInstantiationPredicateAction_0()); }
(

)
{ after(grammarAccess.getInstantiationPredicateAccess().getInstantiationPredicateAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstantiationPredicate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstantiationPredicate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationPredicate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationPredicateAccess().getBodyAssignment_1()); }
(rule__InstantiationPredicate__BodyAssignment_1)
{ after(grammarAccess.getInstantiationPredicateAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalSequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalSequence__Group__0__Impl
	rule__LogicalSequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalSequenceAccess().getCoincidencePatternParserRuleCall_0()); }
	ruleCoincidencePattern
{ after(grammarAccess.getLogicalSequenceAccess().getCoincidencePatternParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalSequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalSequenceAccess().getGroup_1()); }
(rule__LogicalSequence__Group_1__0)*
{ after(grammarAccess.getLogicalSequenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalSequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalSequence__Group_1__0__Impl
	rule__LogicalSequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSequence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalSequenceAccess().getLogicalSequenceLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalSequenceAccess().getLogicalSequenceLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalSequence__Group_1__1__Impl
	rule__LogicalSequence__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSequence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalSequenceAccess().getHyphenMinusHyphenMinusHyphenMinusGreaterThanSignKeyword_1_1()); }
(
	'--->' 
)
{ after(grammarAccess.getLogicalSequenceAccess().getHyphenMinusHyphenMinusHyphenMinusGreaterThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalSequence__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalSequence__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSequence__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalSequenceAccess().getRightOperandAssignment_1_2()); }
(rule__LogicalSequence__RightOperandAssignment_1_2)
{ after(grammarAccess.getLogicalSequenceAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CoincidencePattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoincidencePattern__Group__0__Impl
	rule__CoincidencePattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoincidencePattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoincidencePatternAccess().getOrPatternParserRuleCall_0()); }
	ruleOrPattern
{ after(grammarAccess.getCoincidencePatternAccess().getOrPatternParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoincidencePattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoincidencePattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoincidencePattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoincidencePatternAccess().getGroup_1()); }
(rule__CoincidencePattern__Group_1__0)*
{ after(grammarAccess.getCoincidencePatternAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CoincidencePattern__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoincidencePattern__Group_1__0__Impl
	rule__CoincidencePattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoincidencePattern__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoincidencePatternAccess().getCoincidencePatternLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getCoincidencePatternAccess().getCoincidencePatternLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoincidencePattern__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoincidencePattern__Group_1__1__Impl
	rule__CoincidencePattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoincidencePattern__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoincidencePatternAccess().getAmpersandKeyword_1_1()); }

	'&' 

{ after(grammarAccess.getCoincidencePatternAccess().getAmpersandKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CoincidencePattern__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CoincidencePattern__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoincidencePattern__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoincidencePatternAccess().getRightOperandAssignment_1_2()); }
(rule__CoincidencePattern__RightOperandAssignment_1_2)
{ after(grammarAccess.getCoincidencePatternAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrPattern__Group__0__Impl
	rule__OrPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrPatternAccess().getXorPatternParserRuleCall_0()); }
	ruleXorPattern
{ after(grammarAccess.getOrPatternAccess().getXorPatternParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrPatternAccess().getGroup_1()); }
(rule__OrPattern__Group_1__0)*
{ after(grammarAccess.getOrPatternAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrPattern__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrPattern__Group_1__0__Impl
	rule__OrPattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPattern__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrPatternAccess().getOrPatternLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getOrPatternAccess().getOrPatternLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrPattern__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrPattern__Group_1__1__Impl
	rule__OrPattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPattern__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrPatternAccess().getVerticalLineKeyword_1_1()); }

	'|' 

{ after(grammarAccess.getOrPatternAccess().getVerticalLineKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrPattern__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrPattern__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrPattern__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrPatternAccess().getRightOperandAssignment_1_2()); }
(rule__OrPattern__RightOperandAssignment_1_2)
{ after(grammarAccess.getOrPatternAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__XorPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorPattern__Group__0__Impl
	rule__XorPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorPatternAccess().getPlusPatternParserRuleCall_0()); }
	rulePlusPattern
{ after(grammarAccess.getXorPatternAccess().getPlusPatternParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorPatternAccess().getGroup_1()); }
(rule__XorPattern__Group_1__0)*
{ after(grammarAccess.getXorPatternAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__XorPattern__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorPattern__Group_1__0__Impl
	rule__XorPattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XorPattern__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorPatternAccess().getXorPatternLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getXorPatternAccess().getXorPatternLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorPattern__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorPattern__Group_1__1__Impl
	rule__XorPattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XorPattern__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorPatternAccess().getGreaterThanSignLessThanSignKeyword_1_1()); }

	'><' 

{ after(grammarAccess.getXorPatternAccess().getGreaterThanSignLessThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__XorPattern__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__XorPattern__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XorPattern__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorPatternAccess().getRightOperandAssignment_1_2()); }
(rule__XorPattern__RightOperandAssignment_1_2)
{ after(grammarAccess.getXorPatternAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PlusPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusPattern__Group__0__Impl
	rule__PlusPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusPatternAccess().getIterationPatternParserRuleCall_0()); }
	ruleIterationPattern
{ after(grammarAccess.getPlusPatternAccess().getIterationPatternParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusPatternAccess().getGroup_1()); }
(rule__PlusPattern__Group_1__0)?
{ after(grammarAccess.getPlusPatternAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusPattern__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusPattern__Group_1__0__Impl
	rule__PlusPattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusPattern__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusPatternAccess().getPlusPatternOperandAction_1_0()); }
(

)
{ after(grammarAccess.getPlusPatternAccess().getPlusPatternOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusPattern__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusPattern__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusPattern__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusPatternAccess().getPlusSignKeyword_1_1()); }

	'+' 

{ after(grammarAccess.getPlusPatternAccess().getPlusSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IterationPattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationPattern__Group__0__Impl
	rule__IterationPattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getDomainSpecificEventReferenceOrPatternParserRuleCall_0()); }
	ruleDomainSpecificEventReferenceOrPattern
{ after(grammarAccess.getIterationPatternAccess().getDomainSpecificEventReferenceOrPatternParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationPattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationPattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getGroup_1()); }
(rule__IterationPattern__Group_1__0)?
{ after(grammarAccess.getIterationPatternAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IterationPattern__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationPattern__Group_1__0__Impl
	rule__IterationPattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getIterationPatternOperandAction_1_0()); }
(

)
{ after(grammarAccess.getIterationPatternAccess().getIterationPatternOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationPattern__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationPattern__Group_1__1__Impl
	rule__IterationPattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getLeftSquareBracketKeyword_1_1()); }

	'[' 

{ after(grammarAccess.getIterationPatternAccess().getLeftSquareBracketKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationPattern__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationPattern__Group_1__2__Impl
	rule__IterationPattern__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getNumberOfIterationsAssignment_1_2()); }
(rule__IterationPattern__NumberOfIterationsAssignment_1_2)
{ after(grammarAccess.getIterationPatternAccess().getNumberOfIterationsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationPattern__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationPattern__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getIterationPatternAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DomainSpecificEventReferenceOrPattern__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceOrPattern__Group_1__0__Impl
	rule__DomainSpecificEventReferenceOrPattern__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceOrPattern__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReferenceOrPattern__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceOrPattern__Group_1__1__Impl
	rule__DomainSpecificEventReferenceOrPattern__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceOrPattern__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getDomainSpecificEventsPatternParserRuleCall_1_1()); }
	ruleDomainSpecificEventsPattern
{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getDomainSpecificEventsPatternParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReferenceOrPattern__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceOrPattern__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceOrPattern__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getDomainSpecificEventReferenceOrPatternAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DomainSpecificEventReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReference__Group__0__Impl
	rule__DomainSpecificEventReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceAccess().getDomainSpecificEventReferenceAction_0()); }
(

)
{ after(grammarAccess.getDomainSpecificEventReferenceAccess().getDomainSpecificEventReferenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceAccess().getReferencedDseAssignment_1()); }
(rule__DomainSpecificEventReference__ReferencedDseAssignment_1)
{ after(grammarAccess.getDomainSpecificEventReferenceAccess().getReferencedDseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DomainSpecificEventReferenceWithArguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceWithArguments__Group__0__Impl
	rule__DomainSpecificEventReferenceWithArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getDomainSpecificEventReferenceWithArgumentsAction_0()); }
(

)
{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getDomainSpecificEventReferenceWithArgumentsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReferenceWithArguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceWithArguments__Group__1__Impl
	rule__DomainSpecificEventReferenceWithArguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getReferencedDseAssignment_1()); }
(rule__DomainSpecificEventReferenceWithArguments__ReferencedDseAssignment_1)
{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getReferencedDseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReferenceWithArguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceWithArguments__Group__2__Impl
	rule__DomainSpecificEventReferenceWithArguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReferenceWithArguments__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceWithArguments__Group__3__Impl
	rule__DomainSpecificEventReferenceWithArguments__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getArgumentsAssignment_3()); }
(rule__DomainSpecificEventReferenceWithArguments__ArgumentsAssignment_3)
{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getArgumentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DomainSpecificEventReferenceWithArguments__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DomainSpecificEventReferenceWithArguments__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SingleArgument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleArgument__Group__0__Impl
	rule__SingleArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleArgument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleArgumentAccess().getSingleArgumentAction_0()); }
(

)
{ after(grammarAccess.getSingleArgumentAccess().getSingleArgumentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleArgument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleArgument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleArgumentAccess().getArgumentAssignment_1()); }
(rule__SingleArgument__ArgumentAssignment_1)
{ after(grammarAccess.getSingleArgumentAccess().getArgumentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultipleArguments__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleArguments__Group__0__Impl
	rule__MultipleArguments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleArguments__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getMultipleArgumentsAction_0()); }
(

)
{ after(grammarAccess.getMultipleArgumentsAccess().getMultipleArgumentsAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleArguments__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleArguments__Group__1__Impl
	rule__MultipleArguments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleArguments__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getHeadAssignment_1()); }
(rule__MultipleArguments__HeadAssignment_1)
{ after(grammarAccess.getMultipleArgumentsAccess().getHeadAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleArguments__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleArguments__Group__2__Impl
	rule__MultipleArguments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleArguments__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getMultipleArgumentsAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultipleArguments__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultipleArguments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleArguments__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getTailAssignment_3()); }
(rule__MultipleArguments__TailAssignment_3)
{ after(grammarAccess.getMultipleArgumentsAccess().getTailAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeedbackPolicy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackPolicy__Group__0__Impl
	rule__FeedbackPolicy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackPolicy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackPolicyAccess().getFeedbackPolicyAction_0()); }
(

)
{ after(grammarAccess.getFeedbackPolicyAccess().getFeedbackPolicyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackPolicy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackPolicy__Group__1__Impl
	rule__FeedbackPolicy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackPolicy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackPolicyAccess().getRulesAssignment_1()); }
(rule__FeedbackPolicy__RulesAssignment_1)*
{ after(grammarAccess.getFeedbackPolicyAccess().getRulesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackPolicy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackPolicy__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackPolicy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackPolicyAccess().getDefaultRuleAssignment_2()); }
(rule__FeedbackPolicy__DefaultRuleAssignment_2)
{ after(grammarAccess.getFeedbackPolicyAccess().getDefaultRuleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeedbackRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackRule__Group__0__Impl
	rule__FeedbackRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getFeedbackRuleAction_0()); }
(

)
{ after(grammarAccess.getFeedbackRuleAccess().getFeedbackRuleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackRule__Group__1__Impl
	rule__FeedbackRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getFeedbackRuleAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackRule__Group__2__Impl
	rule__FeedbackRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getFilterAssignment_2()); }
(rule__FeedbackRule__FilterAssignment_2)
{ after(grammarAccess.getFeedbackRuleAccess().getFilterAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackRule__Group__3__Impl
	rule__FeedbackRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getFeedbackRuleAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackRule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackRule__Group__4__Impl
	rule__FeedbackRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getEqualsSignGreaterThanSignKeyword_4()); }

	'=>' 

{ after(grammarAccess.getFeedbackRuleAccess().getEqualsSignGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackRule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getConsequenceAssignment_5()); }
(rule__FeedbackRule__ConsequenceAssignment_5)
{ after(grammarAccess.getFeedbackRuleAccess().getConsequenceAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DefaultFeedbackRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultFeedbackRule__Group__0__Impl
	rule__DefaultFeedbackRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultFeedbackRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultFeedbackRuleAccess().getFeedbackRuleAction_0()); }
(

)
{ after(grammarAccess.getDefaultFeedbackRuleAccess().getFeedbackRuleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultFeedbackRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultFeedbackRule__Group__1__Impl
	rule__DefaultFeedbackRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultFeedbackRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultFeedbackRuleAccess().getDefaultKeyword_1()); }

	'default' 

{ after(grammarAccess.getDefaultFeedbackRuleAccess().getDefaultKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultFeedbackRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultFeedbackRule__Group__2__Impl
	rule__DefaultFeedbackRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultFeedbackRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultFeedbackRuleAccess().getEqualsSignGreaterThanSignKeyword_2()); }

	'=>' 

{ after(grammarAccess.getDefaultFeedbackRuleAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultFeedbackRule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultFeedbackRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultFeedbackRule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultFeedbackRuleAccess().getConsequenceAssignment_3()); }
(rule__DefaultFeedbackRule__ConsequenceAssignment_3)
{ after(grammarAccess.getDefaultFeedbackRuleAccess().getConsequenceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FeedbackFilter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackFilter__Group__0__Impl
	rule__FeedbackFilter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackFilter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackFilterAccess().getFeedbackFilterAction_0()); }
(

)
{ after(grammarAccess.getFeedbackFilterAccess().getFeedbackFilterAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackFilter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackFilter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackFilter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackFilterAccess().getBodyAssignment_1()); }
(rule__FeedbackFilter__BodyAssignment_1)
{ after(grammarAccess.getFeedbackFilterAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeedbackConsequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackConsequence__Group__0__Impl
	rule__FeedbackConsequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackConsequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackConsequenceAccess().getFeedbackConsequenceAction_0()); }
(

)
{ after(grammarAccess.getFeedbackConsequenceAccess().getFeedbackConsequenceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackConsequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackConsequence__Group__1__Impl
	rule__FeedbackConsequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackConsequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackConsequenceAccess().getAllowKeyword_1()); }

	'allow' 

{ after(grammarAccess.getFeedbackConsequenceAccess().getAllowKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeedbackConsequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeedbackConsequence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackConsequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackConsequenceAccess().getNavigationPathToMoccEventAssignment_2()); }
(rule__FeedbackConsequence__NavigationPathToMoccEventAssignment_2)
{ after(grammarAccess.getFeedbackConsequenceAccess().getNavigationPathToMoccEventAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EclEvent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EclEvent__Group__0__Impl
	rule__EclEvent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EclEvent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEclEventAccess().getEclEventAction_0()); }
(

)
{ after(grammarAccess.getEclEventAccess().getEclEventAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EclEvent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EclEvent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EclEvent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEclEventAccess().getEventReferenceAssignment_1()); }
(rule__EclEvent__EventReferenceAssignment_1)
{ after(grammarAccess.getEclEventAccess().getEventReferenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Kermeta3ExecutionFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Kermeta3ExecutionFunction__Group__0__Impl
	rule__Kermeta3ExecutionFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getKermeta3ExecutionFunctionAction_0()); }
(

)
{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getKermeta3ExecutionFunctionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Kermeta3ExecutionFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Kermeta3ExecutionFunction__Group__1__Impl
	rule__Kermeta3ExecutionFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getNavigationPathToOperationAssignment_1()); }
(rule__Kermeta3ExecutionFunction__NavigationPathToOperationAssignment_1)
{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getNavigationPathToOperationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Kermeta3ExecutionFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Kermeta3ExecutionFunction__Group__2__Impl
	rule__Kermeta3ExecutionFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getCallKindAssignment_2()); }
(rule__Kermeta3ExecutionFunction__CallKindAssignment_2)?
{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getCallKindAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Kermeta3ExecutionFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Kermeta3ExecutionFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getGroup_3()); }
(rule__Kermeta3ExecutionFunction__Group_3__0)?
{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Kermeta3ExecutionFunction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Kermeta3ExecutionFunction__Group_3__0__Impl
	rule__Kermeta3ExecutionFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getReturningKeyword_3_0()); }

	'returning' 

{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getReturningKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Kermeta3ExecutionFunction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Kermeta3ExecutionFunction__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getResultAssignment_3_1()); }
(rule__Kermeta3ExecutionFunction__ResultAssignment_3_1)
{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getResultAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecutionFunctionResult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutionFunctionResult__Group__0__Impl
	rule__ExecutionFunctionResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionFunctionResult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionFunctionResultAccess().getExecutionFunctionResultAction_0()); }
(

)
{ after(grammarAccess.getExecutionFunctionResultAccess().getExecutionFunctionResultAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionFunctionResult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutionFunctionResult__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionFunctionResult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionFunctionResultAccess().getNameAssignment_1()); }
(rule__ExecutionFunctionResult__NameAssignment_1)
{ after(grammarAccess.getExecutionFunctionResultAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__GImportStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GImportStatement__Group__0__Impl
	rule__GImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GImportStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGImportStatementAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getGImportStatementAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GImportStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GImportStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GImportStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGImportStatementAccess().getImportURIAssignment_1()); }
(rule__GImportStatement__ImportURIAssignment_1)
{ after(grammarAccess.getGImportStatementAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group__0__Impl
	rule__GOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getGXorExpressionParserRuleCall_0()); }
	ruleGXorExpression
{ after(grammarAccess.getGOrExpressionAccess().getGXorExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getGroup_1()); }
(rule__GOrExpression__Group_1__0)*
{ after(grammarAccess.getGOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group_1__0__Impl
	rule__GOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getGOrExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGOrExpressionAccess().getGOrExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group_1__1__Impl
	rule__GOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GOrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GOrExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGOrExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GXorExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group__0__Impl
	rule__GXorExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getGAndExpressionParserRuleCall_0()); }
	ruleGAndExpression
{ after(grammarAccess.getGXorExpressionAccess().getGAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GXorExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getGroup_1()); }
(rule__GXorExpression__Group_1__0)*
{ after(grammarAccess.getGXorExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GXorExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group_1__0__Impl
	rule__GXorExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getGXorExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGXorExpressionAccess().getGXorExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GXorExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group_1__1__Impl
	rule__GXorExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GXorExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGXorExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GXorExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GXorExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GXorExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGXorExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group__0__Impl
	rule__GAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getGEqualityExpressionParserRuleCall_0()); }
	ruleGEqualityExpression
{ after(grammarAccess.getGAndExpressionAccess().getGEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getGroup_1()); }
(rule__GAndExpression__Group_1__0)*
{ after(grammarAccess.getGAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group_1__0__Impl
	rule__GAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getGAndExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGAndExpressionAccess().getGAndExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group_1__1__Impl
	rule__GAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GAndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GAndExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGAndExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GEqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group__0__Impl
	rule__GEqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGRelationExpressionParserRuleCall_0()); }
	ruleGRelationExpression
{ after(grammarAccess.getGEqualityExpressionAccess().getGRelationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGroup_1()); }
(rule__GEqualityExpression__Group_1__0)*
{ after(grammarAccess.getGEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GEqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group_1__0__Impl
	rule__GEqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getGEqualityExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGEqualityExpressionAccess().getGEqualityExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group_1__1__Impl
	rule__GEqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GEqualityExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GEqualityExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGEqualityExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GRelationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group__0__Impl
	rule__GRelationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGAdditionExpressionParserRuleCall_0()); }
	ruleGAdditionExpression
{ after(grammarAccess.getGRelationExpressionAccess().getGAdditionExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GRelationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGroup_1()); }
(rule__GRelationExpression__Group_1__0)*
{ after(grammarAccess.getGRelationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GRelationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group_1__0__Impl
	rule__GRelationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getGRelationExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGRelationExpressionAccess().getGRelationExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GRelationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group_1__1__Impl
	rule__GRelationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GRelationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGRelationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GRelationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GRelationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GRelationExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGRelationExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GAdditionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group__0__Impl
	rule__GAdditionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGMultiplicationExpressionParserRuleCall_0()); }
	ruleGMultiplicationExpression
{ after(grammarAccess.getGAdditionExpressionAccess().getGMultiplicationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAdditionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGroup_1()); }
(rule__GAdditionExpression__Group_1__0)*
{ after(grammarAccess.getGAdditionExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GAdditionExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group_1__0__Impl
	rule__GAdditionExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getGAdditionExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGAdditionExpressionAccess().getGAdditionExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAdditionExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group_1__1__Impl
	rule__GAdditionExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GAdditionExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGAdditionExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GAdditionExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GAdditionExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GAdditionExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGAdditionExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GMultiplicationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group__0__Impl
	rule__GMultiplicationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGNegationExpressionParserRuleCall_0()); }
	ruleGNegationExpression
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGNegationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GMultiplicationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGroup_1()); }
(rule__GMultiplicationExpression__Group_1__0)*
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GMultiplicationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group_1__0__Impl
	rule__GMultiplicationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getGMultiplicationExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getGMultiplicationExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GMultiplicationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group_1__1__Impl
	rule__GMultiplicationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GMultiplicationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GMultiplicationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GMultiplicationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__GMultiplicationExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GNegationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNegationExpression__Group_1__0__Impl
	rule__GNegationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getGNegationExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getGNegationExpressionAccess().getGNegationExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNegationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNegationExpression__Group_1__1__Impl
	rule__GNegationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__GNegationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getGNegationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNegationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNegationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperandAssignment_1_2()); }
(rule__GNegationExpression__OperandAssignment_1_2)
{ after(grammarAccess.getGNegationExpressionAccess().getOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GNavigationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group__0__Impl
	rule__GNavigationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGReferenceExpressionParserRuleCall_0()); }
	ruleGReferenceExpression
{ after(grammarAccess.getGNavigationExpressionAccess().getGReferenceExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNavigationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGroup_1()); }
(rule__GNavigationExpression__Group_1__0)*
{ after(grammarAccess.getGNavigationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GNavigationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group_1__0__Impl
	rule__GNavigationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getGNavigationExpressionBodyAction_1_0()); }
(

)
{ after(grammarAccess.getGNavigationExpressionAccess().getGNavigationExpressionBodyAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNavigationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group_1__1__Impl
	rule__GNavigationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getNavigationOperatorParserRuleCall_1_1()); }
	ruleNavigationOperator
{ after(grammarAccess.getGNavigationExpressionAccess().getNavigationOperatorParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GNavigationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GNavigationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectAssignment_1_2()); }
(rule__GNavigationExpression__ReferencedEObjectAssignment_1_2)
{ after(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GReferenceExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GReferenceExpression__Group_1__0__Impl
	rule__GReferenceExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getGReferenceExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getGReferenceExpressionAccess().getGReferenceExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GReferenceExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GReferenceExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectAssignment_1_1()); }
(rule__GReferenceExpression__ReferencedEObjectAssignment_1_1)
{ after(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GStringExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GStringExpression__Group__0__Impl
	rule__GStringExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GStringExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGStringExpressionAccess().getGStringExpressionAction_0()); }
(

)
{ after(grammarAccess.getGStringExpressionAccess().getGStringExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GStringExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GStringExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GStringExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGStringExpressionAccess().getValueAssignment_1()); }
(rule__GStringExpression__ValueAssignment_1)
{ after(grammarAccess.getGStringExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GBooleanExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBooleanExpression__Group__0__Impl
	rule__GBooleanExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GBooleanExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getGBooleanExpressionAction_0()); }
(

)
{ after(grammarAccess.getGBooleanExpressionAccess().getGBooleanExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBooleanExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBooleanExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GBooleanExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getValueAssignment_1()); }
(rule__GBooleanExpression__ValueAssignment_1)
{ after(grammarAccess.getGBooleanExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GIntegerExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIntegerExpression__Group__0__Impl
	rule__GIntegerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GIntegerExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getGIntegerExpressionAction_0()); }
(

)
{ after(grammarAccess.getGIntegerExpressionAccess().getGIntegerExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIntegerExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIntegerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GIntegerExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getValueAssignment_1()); }
(rule__GIntegerExpression__ValueAssignment_1)
{ after(grammarAccess.getGIntegerExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GDoubleExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GDoubleExpression__Group__0__Impl
	rule__GDoubleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GDoubleExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getGDoubleExpressionAction_0()); }
(

)
{ after(grammarAccess.getGDoubleExpressionAccess().getGDoubleExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GDoubleExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GDoubleExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GDoubleExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getValueAssignment_1()); }
(rule__GDoubleExpression__ValueAssignment_1)
{ after(grammarAccess.getGDoubleExpressionAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GEnumLiteralExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEnumLiteralExpression__Group__0__Impl
	rule__GEnumLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getGEnumLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getGEnumLiteralExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEnumLiteralExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEnumLiteralExpression__Group__1__Impl
	rule__GEnumLiteralExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getGEnumLiteralExpressionAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GEnumLiteralExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GEnumLiteralExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getValueAssignment_2()); }
(rule__GEnumLiteralExpression__ValueAssignment_2)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GIfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__0__Impl
	rule__GIfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getGIfExpressionAction_0()); }
(

)
{ after(grammarAccess.getGIfExpressionAccess().getGIfExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__1__Impl
	rule__GIfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getGIfExpressionAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__2__Impl
	rule__GIfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getConditionAssignment_2()); }
(rule__GIfExpression__ConditionAssignment_2)
{ after(grammarAccess.getGIfExpressionAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__3__Impl
	rule__GIfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getThenKeyword_3()); }

	'then' 

{ after(grammarAccess.getGIfExpressionAccess().getThenKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__4__Impl
	rule__GIfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getThenExpressionAssignment_4()); }
(rule__GIfExpression__ThenExpressionAssignment_4)
{ after(grammarAccess.getGIfExpressionAccess().getThenExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__5__Impl
	rule__GIfExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getElseKeyword_5()); }

	'else' 

{ after(grammarAccess.getGIfExpressionAccess().getElseKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__6__Impl
	rule__GIfExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getElseExpressionAssignment_6()); }
(rule__GIfExpression__ElseExpressionAssignment_6)
{ after(grammarAccess.getGIfExpressionAccess().getElseExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GIfExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GIfExpression__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getEndifKeyword_7()); }

	'endif' 

{ after(grammarAccess.getGIfExpressionAccess().getEndifKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__GBraceExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__0__Impl
	rule__GBraceExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getGBraceExpressionAction_0()); }
(

)
{ after(grammarAccess.getGBraceExpressionAccess().getGBraceExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBraceExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__1__Impl
	rule__GBraceExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getGBraceExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBraceExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__2__Impl
	rule__GBraceExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getInnerExpressionAssignment_2()); }
(rule__GBraceExpression__InnerExpressionAssignment_2)
{ after(grammarAccess.getGBraceExpressionAccess().getInnerExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GBraceExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GBraceExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getGBraceExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__DomainSpecificEventsSpecification__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventsSpecificationAccess().getImportsImportStatementParserRuleCall_1_0()); }
	ruleImportStatement{ after(grammarAccess.getDomainSpecificEventsSpecificationAccess().getImportsImportStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventsSpecification__EventsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventsSpecificationAccess().getEventsDomainSpecificEventParserRuleCall_2_0()); }
	ruleDomainSpecificEvent{ after(grammarAccess.getDomainSpecificEventsSpecificationAccess().getEventsDomainSpecificEventParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__VisibilityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	ruleVisibility{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__UponMoccEventAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getUponMoccEventMoccEventParserRuleCall_6_0()); }
	ruleMoccEvent{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getUponMoccEventMoccEventParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__ExecutionKindAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionKindExecutionKindEnumRuleCall_7_0_0()); }
	ruleExecutionKind{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionKindExecutionKindEnumRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__ExecutionFunctionAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionFunctionExecutionFunctionParserRuleCall_7_1_0()); }
	ruleExecutionFunction{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getExecutionFunctionExecutionFunctionParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__FeedbackPolicyAssignment_7_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getFeedbackPolicyFeedbackPolicyParserRuleCall_7_2_2_0()); }
	ruleFeedbackPolicy{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getFeedbackPolicyFeedbackPolicyParserRuleCall_7_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicDomainSpecificEvent__RaisedMoccEventAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicDomainSpecificEventAccess().getRaisedMoccEventMoccEventParserRuleCall_8_1_0()); }
	ruleMoccEvent{ after(grammarAccess.getAtomicDomainSpecificEventAccess().getRaisedMoccEventMoccEventParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__VisibilityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
	ruleVisibility{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getVisibilityVisibilityEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__UnfoldingStrategyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getUnfoldingStrategyUnfoldingStrategyParserRuleCall_5_0()); }
	ruleUnfoldingStrategy{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getUnfoldingStrategyUnfoldingStrategyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompositeDomainSpecificEvent__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompositeDomainSpecificEventAccess().getBodyDomainSpecificEventsPatternParserRuleCall_6_0()); }
	ruleDomainSpecificEventsPattern{ after(grammarAccess.getCompositeDomainSpecificEventAccess().getBodyDomainSpecificEventsPatternParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__LocalVariablesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getLocalVariablesLocalVariableParserRuleCall_3_0()); }
	ruleLocalVariable{ after(grammarAccess.getUnfoldingStrategyAccess().getLocalVariablesLocalVariableParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnfoldingStrategy__InstantiationPredicatesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnfoldingStrategyAccess().getInstantiationPredicatesInstantiationPredicateParserRuleCall_7_0()); }
	ruleInstantiationPredicate{ after(grammarAccess.getUnfoldingStrategyAccess().getInstantiationPredicatesInstantiationPredicateParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLocalVariableAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getTypeEClassifierCrossReference_3_0()); }
(
{ before(grammarAccess.getLocalVariableAccess().getTypeEClassifierQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getLocalVariableAccess().getTypeEClassifierQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getLocalVariableAccess().getTypeEClassifierCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstantiationPredicate__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstantiationPredicateAccess().getBodyGExpressionParserRuleCall_1_0()); }
	ruleGExpression{ after(grammarAccess.getInstantiationPredicateAccess().getBodyGExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalSequence__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalSequenceAccess().getRightOperandCoincidencePatternParserRuleCall_1_2_0()); }
	ruleCoincidencePattern{ after(grammarAccess.getLogicalSequenceAccess().getRightOperandCoincidencePatternParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CoincidencePattern__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCoincidencePatternAccess().getRightOperandOrPatternParserRuleCall_1_2_0()); }
	ruleOrPattern{ after(grammarAccess.getCoincidencePatternAccess().getRightOperandOrPatternParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrPattern__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrPatternAccess().getRightOperandXorPatternParserRuleCall_1_2_0()); }
	ruleXorPattern{ after(grammarAccess.getOrPatternAccess().getRightOperandXorPatternParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__XorPattern__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getXorPatternAccess().getRightOperandPlusPatternParserRuleCall_1_2_0()); }
	rulePlusPattern{ after(grammarAccess.getXorPatternAccess().getRightOperandPlusPatternParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationPattern__NumberOfIterationsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationPatternAccess().getNumberOfIterationsINTTerminalRuleCall_1_2_0()); }
	RULE_INT{ after(grammarAccess.getIterationPatternAccess().getNumberOfIterationsINTTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReference__ReferencedDseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceAccess().getReferencedDseDomainSpecificEventCrossReference_1_0()); }
(
{ before(grammarAccess.getDomainSpecificEventReferenceAccess().getReferencedDseDomainSpecificEventIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDomainSpecificEventReferenceAccess().getReferencedDseDomainSpecificEventIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDomainSpecificEventReferenceAccess().getReferencedDseDomainSpecificEventCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__ReferencedDseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getReferencedDseDomainSpecificEventCrossReference_1_0()); }
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getReferencedDseDomainSpecificEventIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getReferencedDseDomainSpecificEventIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getReferencedDseDomainSpecificEventCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DomainSpecificEventReferenceWithArguments__ArgumentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getArgumentsListOfArgumentsParserRuleCall_3_0()); }
	ruleListOfArguments{ after(grammarAccess.getDomainSpecificEventReferenceWithArgumentsAccess().getArgumentsListOfArgumentsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleArgument__ArgumentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleArgumentAccess().getArgumentLocalVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getSingleArgumentAccess().getArgumentLocalVariableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSingleArgumentAccess().getArgumentLocalVariableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSingleArgumentAccess().getArgumentLocalVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleArguments__HeadAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getHeadLocalVariableCrossReference_1_0()); }
(
{ before(grammarAccess.getMultipleArgumentsAccess().getHeadLocalVariableIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMultipleArgumentsAccess().getHeadLocalVariableIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMultipleArgumentsAccess().getHeadLocalVariableCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultipleArguments__TailAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultipleArgumentsAccess().getTailListOfArgumentsParserRuleCall_3_0()); }
	ruleListOfArguments{ after(grammarAccess.getMultipleArgumentsAccess().getTailListOfArgumentsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackPolicy__RulesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackPolicyAccess().getRulesFeedbackRuleParserRuleCall_1_0()); }
	ruleFeedbackRule{ after(grammarAccess.getFeedbackPolicyAccess().getRulesFeedbackRuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackPolicy__DefaultRuleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackPolicyAccess().getDefaultRuleDefaultFeedbackRuleParserRuleCall_2_0()); }
	ruleDefaultFeedbackRule{ after(grammarAccess.getFeedbackPolicyAccess().getDefaultRuleDefaultFeedbackRuleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__FilterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getFilterFeedbackFilterParserRuleCall_2_0()); }
	ruleFeedbackFilter{ after(grammarAccess.getFeedbackRuleAccess().getFilterFeedbackFilterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackRule__ConsequenceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackRuleAccess().getConsequenceFeedbackConsequenceParserRuleCall_5_0()); }
	ruleFeedbackConsequence{ after(grammarAccess.getFeedbackRuleAccess().getConsequenceFeedbackConsequenceParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultFeedbackRule__ConsequenceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultFeedbackRuleAccess().getConsequenceFeedbackConsequenceParserRuleCall_3_0()); }
	ruleFeedbackConsequence{ after(grammarAccess.getDefaultFeedbackRuleAccess().getConsequenceFeedbackConsequenceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackFilter__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackFilterAccess().getBodyGExpressionParserRuleCall_1_0()); }
	ruleGExpression{ after(grammarAccess.getFeedbackFilterAccess().getBodyGExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeedbackConsequence__NavigationPathToMoccEventAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeedbackConsequenceAccess().getNavigationPathToMoccEventGExpressionParserRuleCall_2_0()); }
	ruleGExpression{ after(grammarAccess.getFeedbackConsequenceAccess().getNavigationPathToMoccEventGExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EclEvent__EventReferenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEclEventAccess().getEventReferenceECLDefCSCrossReference_1_0()); }
(
{ before(grammarAccess.getEclEventAccess().getEventReferenceECLDefCSQualifiedNameParserRuleCall_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getEclEventAccess().getEventReferenceECLDefCSQualifiedNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEclEventAccess().getEventReferenceECLDefCSCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__NavigationPathToOperationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getNavigationPathToOperationGExpressionParserRuleCall_1_0()); }
	ruleGExpression{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getNavigationPathToOperationGExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__CallKindAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getCallKindCallKindEnumRuleCall_2_0()); }
	ruleCallKind{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getCallKindCallKindEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Kermeta3ExecutionFunction__ResultAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKermeta3ExecutionFunctionAccess().getResultExecutionFunctionResultParserRuleCall_3_1_0()); }
	ruleExecutionFunctionResult{ after(grammarAccess.getKermeta3ExecutionFunctionAccess().getResultExecutionFunctionResultParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionFunctionResult__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionFunctionResultAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExecutionFunctionResultAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__GImportStatement__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGImportStatementAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getOperatorGOrOperatorEnumRuleCall_1_1_0()); }
	ruleGOrOperator{ after(grammarAccess.getGOrExpressionAccess().getOperatorGOrOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GOrExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGOrExpressionAccess().getRightOperandGXorExpressionParserRuleCall_1_2_0()); }
	ruleGXorExpression{ after(grammarAccess.getGOrExpressionAccess().getRightOperandGXorExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getOperatorGXorOperatorEnumRuleCall_1_1_0()); }
	ruleGXorOperator{ after(grammarAccess.getGXorExpressionAccess().getOperatorGXorOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GXorExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGXorExpressionAccess().getRightOperandGAndExpressionParserRuleCall_1_2_0()); }
	ruleGAndExpression{ after(grammarAccess.getGXorExpressionAccess().getRightOperandGAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getOperatorGAndOperatorEnumRuleCall_1_1_0()); }
	ruleGAndOperator{ after(grammarAccess.getGAndExpressionAccess().getOperatorGAndOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAndExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAndExpressionAccess().getRightOperandGEqualityExpressionParserRuleCall_1_2_0()); }
	ruleGEqualityExpression{ after(grammarAccess.getGAndExpressionAccess().getRightOperandGEqualityExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getOperatorGEqualityOperatorEnumRuleCall_1_1_0()); }
	ruleGEqualityOperator{ after(grammarAccess.getGEqualityExpressionAccess().getOperatorGEqualityOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEqualityExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEqualityExpressionAccess().getRightOperandGRelationExpressionParserRuleCall_1_2_0()); }
	ruleGRelationExpression{ after(grammarAccess.getGEqualityExpressionAccess().getRightOperandGRelationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getOperatorGRelationOperatorEnumRuleCall_1_1_0()); }
	ruleGRelationOperator{ after(grammarAccess.getGRelationExpressionAccess().getOperatorGRelationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GRelationExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGRelationExpressionAccess().getRightOperandGAdditionExpressionParserRuleCall_1_2_0()); }
	ruleGAdditionExpression{ after(grammarAccess.getGRelationExpressionAccess().getRightOperandGAdditionExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getOperatorGAdditionOperatorEnumRuleCall_1_1_0()); }
	ruleGAdditionOperator{ after(grammarAccess.getGAdditionExpressionAccess().getOperatorGAdditionOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GAdditionExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGAdditionExpressionAccess().getRightOperandGMultiplicationExpressionParserRuleCall_1_2_0()); }
	ruleGMultiplicationExpression{ after(grammarAccess.getGAdditionExpressionAccess().getRightOperandGMultiplicationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getOperatorGMultiplicationOperatorEnumRuleCall_1_1_0()); }
	ruleGMultiplicationOperator{ after(grammarAccess.getGMultiplicationExpressionAccess().getOperatorGMultiplicationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GMultiplicationExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandGNegationExpressionParserRuleCall_1_2_0()); }
	ruleGNegationExpression{ after(grammarAccess.getGMultiplicationExpressionAccess().getRightOperandGNegationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperatorGNegationOperatorEnumRuleCall_1_1_0()); }
	ruleGNegationOperator{ after(grammarAccess.getGNegationExpressionAccess().getOperatorGNegationOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNegationExpression__OperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNegationExpressionAccess().getOperandGNavigationExpressionParserRuleCall_1_2_0()); }
	ruleGNavigationExpression{ after(grammarAccess.getGNegationExpressionAccess().getOperandGNavigationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GNavigationExpression__ReferencedEObjectAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectCrossReference_1_2_0()); }
(
{ before(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getGNavigationExpressionAccess().getReferencedEObjectEObjectCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GReferenceExpression__ReferencedEObjectAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectCrossReference_1_1_0()); }
(
{ before(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getGReferenceExpressionAccess().getReferencedEObjectEObjectCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GStringExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGStringExpressionAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getGStringExpressionAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GBooleanExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getGBooleanExpressionAccess().getValueBOOLEANTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIntegerExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIntegerExpressionAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getGIntegerExpressionAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GDoubleExpression__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGDoubleExpressionAccess().getValueDOUBLETerminalRuleCall_1_0()); }
	RULE_DOUBLE{ after(grammarAccess.getGDoubleExpressionAccess().getValueDOUBLETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GEnumLiteralExpression__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralCrossReference_2_0()); }
(
{ before(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getGEnumLiteralExpressionAccess().getValueEEnumLiteralCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getConditionGExpressionParserRuleCall_2_0()); }
	ruleGExpression{ after(grammarAccess.getGIfExpressionAccess().getConditionGExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__ThenExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getThenExpressionGExpressionParserRuleCall_4_0()); }
	ruleGExpression{ after(grammarAccess.getGIfExpressionAccess().getThenExpressionGExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GIfExpression__ElseExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGIfExpressionAccess().getElseExpressionGExpressionParserRuleCall_6_0()); }
	ruleGExpression{ after(grammarAccess.getGIfExpressionAccess().getElseExpressionGExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GBraceExpression__InnerExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGBraceExpressionAccess().getInnerExpressionGExpressionParserRuleCall_2_0()); }
	ruleGExpression{ after(grammarAccess.getGBraceExpressionAccess().getInnerExpressionGExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN : ('true'|'false');

RULE_DOUBLE : ('-'|'+')? (RULE_INT '.' RULE_INT|'.' RULE_INT|RULE_INT '.') ('e' ('-'|'+') RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


